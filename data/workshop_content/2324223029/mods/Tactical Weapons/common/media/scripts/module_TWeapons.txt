module TWeapons
{
	imports
	{
		Base,
	}
	item CHockeyStick
	{
		DisplayName = Carbon Fiber Hockey Stick,
		DisplayCategory = SportsWeapon,
		Type = Weapon,
		Weight = 1.5,
		Icon = CHockeyStick,
		AttachmentType = Shovel,
		BaseSpeed = 1.1,
		BreakSound = HockeyStickBreak,
		Categories = Improvised;Blunt,
		ConditionLowerChanceOneIn = 5,
		ConditionMax = 9,
		CritDmgMultiplier = 2,
		CriticalChance = 30,
		DoorDamage = 1,
		DoorHitSound = HockeyStickHit,
		DropSound = HockeyStickDrop,
		HitFloorSound = HockeyStickHit,
		HitSound = HockeyStickHit,
		IdleAnim = Idle_Weapon2,
		KnockBackOnNoDeath = TRUE,
		KnockdownMod = 1,
		MaxDamage = 0.7,
		MaxHitCount = 3,
		MaxRange = 1.6,
		MinAngle = 0.85,
		MinDamage = 0.3,
		MinRange = 0.61,
		MinimumSwingTime = 3,
		PushBackMod = 0.3,
		RunAnim = Run_Weapon2,
		SplatBloodOnNoDeath = FALSE,
		SplatNumber = 1,
		SubCategory = Swinging,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Bat,
		SwingSound = HockeyStickSwing,
		SwingTime = 3,
		TreeDamage = 0,
		TwoHandWeapon = TRUE,
		WeaponSprite = CHockeyStick,
		OnBreak = OnBreak.LongStick,
		Tags = RepairWithGlue;RepairWithTape,
	}
	craftRecipe BarbedWireCHockeyStick
    {
        time            = 600,
        tags            = AnySurfaceCraft,
        category = Weaponry,
        needTobeLearn = True,
        SkillRequired = Maintenance:2,
        timedAction = CraftWeapon2H,
		xpAward = Maintenance:5,
        AutoLearnAny = Maintenance:5;Blunt:5,
        inputs
        {
            item 1 tags[Pliers] mode:keep flags[MayDegradeLight],
            item 1 [TWeapons.CHockeyStick] flags[Prop2;InheritCondition],
            item 1 [Base.BarbedWire],
        }
        outputs
        {
            item 1 TWeapons.CHockeyStickWire,
        }
    }
	item CHockeyStickWire
	{
		DisplayName = Carbon Fiber Hockey Stick - Barbed Wire,
		DisplayCategory = SportsWeapon,
		Type = Weapon,
		Weight = 1.5,
		Icon = CHockeyStickWire,
		AttachmentType = Shovel,
		BaseSpeed = 1.1,
		BreakSound = BarbedWireIceHockeyStickBreak,
		Categories = Improvised;Blunt,
		ConditionLowerChanceOneIn = 5,
		ConditionMax = 11,
		CritDmgMultiplier = 2,
		CriticalChance = 30,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 1,
		DoorHitSound = BarbedWireIceHockeyStickHit,
		DropSound = BarbedWireIceHockeyStickDrop,
		HitFloorSound = BarbedWireIceHockeyStickHit,
		HitSound = BarbedWireIceHockeyStickHit,
		IdleAnim = Idle_Weapon2,
		KnockBackOnNoDeath = TRUE,
		KnockdownMod = 1,
		MaxDamage = 0.8,
		MaxHitCount = 3,
		MaxRange = 1.6,
		MinAngle = 0.85,
		MinDamage = 0.4,
		MinRange = 0.61,
		MinimumSwingTime = 3,
		PushBackMod = 0.3,
		RunAnim = Run_Weapon2,
		SplatBloodOnNoDeath = FALSE,
		SplatBloodOnNoDeath = TRUE,
		SplatNumber = 2,
		SubCategory = Swinging,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Bat,
		SwingSound = BarbedWireIceHockeyStickSwing,
		SwingTime = 3,
		TreeDamage = 0,
		TwoHandWeapon = TRUE,
		WeaponSprite = CHockeyStickWire,
		OnBreak = OnBreak.LongStick,
		Tags = HasMetal;RepairWithGlue;RepairWithTape,
	}
	item LongSword
	{
		DisplayName = Long Sword,
		DisplayCategory = Weapon,
		Type = Weapon,
		Weight = 2,
		Icon = LongSword,
		AttachmentType = Sword,
		BaseSpeed = 1,
		BreakSound = KatanaBreak,
		Categories = LongBlade,
		ConditionLowerChanceOneIn = 20,
		ConditionMax = 12,
		CritDmgMultiplier = 6,
		CriticalChance = 35,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 8,
		DoorHitSound = KatanaHit,
		DropSound = KatanaDrop,
		HitAngleMod = -30,
		HitFloorSound = KatanaHit,
		HitSound = KatanaHit,
		ImpactSound = KatanaHit,
		KnockBackOnNoDeath = TRUE,
		KnockdownMod = 2,
		MaxDamage = 8,
		MaxHitCount = 3,
		MaxRange = 1.4,
		MinAngle = 0.8,
		MinDamage = 8,
		MinRange = 0.61,
		MinimumSwingTime = 3,
		PushBackMod = 1,
		RunAnim = Run_Weapon2,
		SubCategory = Swinging,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Bat,
		SwingSound = KatanaSwing,
		SwingTime = 3,
		Tags = IgnoreZombieDensity;HasMetal;FullBlade,
		TreeDamage = 1,
		TwoHandWeapon = TRUE,
		WeaponLength = 0.5,
		WeaponSprite = LongSword,

        Sharpness = 1.1,
	}
	item MilitaryKnife
	{
		DisplayName = Military Knife,
		DisplayCategory = Weapon,
		Type = Weapon,
		Weight = 0.9,
		Icon = MilitaryKnife,
		AimingMod = 0.8,
		AttachmentType = Knife,
		BaseSpeed = 1.1,
		BreakSound = HuntingKnifeBreak,
		Categories = SmallBlade,
		CloseKillMove = Jaw_Stab,
		ConditionLowerChanceOneIn = 10,
		ConditionMax = 12,
		CritDmgMultiplier = 3,
		CriticalChance = 50,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 1,
		DoorHitSound = HuntingKnifeHit,
		DropSound = HuntingKnifeDrop,
		EnduranceMod = 0.5,
		HitFloorSound = HuntingKnifeHit,
		HitSound = HuntingKnifeHit,
		IdleAnim = Idle_Weapon2,
		ImpactSound = HuntingKnifeHit,
		IsAimedHandWeapon = TRUE,
		KnockBackOnNoDeath = FALSE,
		KnockdownMod = 0,
		MaxDamage = 1.2,
		MaxHitCount = 1,
		MaxRange = 0.9,
		MetalValue = 30,
		MinAngle = 0.65,
		MinDamage = 0.6,
		MinRange = 0.61,
		MinimumSwingTime = 2,
		PushBackMod = 0.01,
		RunAnim = Run_Weapon2,
		SplatBloodOnNoDeath = TRUE,
		SplatNumber = 4,
		SubCategory = Stab,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Stab,
		SwingSound = HuntingKnifeSwing,
		SwingTime = 2,
		TreeDamage = 0,
		WeaponLength = 0.25,
		WeaponSprite = MilitaryKnife,
		Tags = CutPlant;SharpKnife;ButcherAnimal;Sharpenable;KillAnimal;ButcherAnimal,

        Sharpness = 1.1,
	}
	item TacticalKnife
	{
		DisplayName = Tactical Knife,
		DisplayCategory = Weapon,
		Type = Weapon,
		Weight = 0.9,
		Icon = TacticalKnife,
		AimingMod = 0.8,
		AttachmentType = Knife,
		BaseSpeed = 1.1,
		BreakSound = HuntingKnifeBreak,
		Categories = SmallBlade,
		CloseKillMove = Jaw_Stab,
		ConditionLowerChanceOneIn = 10,
		ConditionMax = 12,
		CritDmgMultiplier = 3,
		CriticalChance = 50,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 1,
		DoorHitSound = HuntingKnifeHit,
		DropSound = HuntingKnifeDrop,
		EnduranceMod = 0.5,
		HitFloorSound = HuntingKnifeHit,
		HitSound = HuntingKnifeHit,
		IdleAnim = Idle_Weapon2,
		ImpactSound = HuntingKnifeHit,
		IsAimedHandWeapon = TRUE,
		KnockBackOnNoDeath = FALSE,
		KnockdownMod = 0,
		MaxDamage = 1.2,
		MaxHitCount = 1,
		MaxRange = 0.9,
		MetalValue = 30,
		MinAngle = 0.65,
		MinDamage = 0.6,
		MinRange = 0.61,
		MinimumSwingTime = 2,
		PushBackMod = 0.01,
		RunAnim = Run_Weapon2,
		SplatBloodOnNoDeath = TRUE,
		SplatNumber = 4,
		SubCategory = Stab,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Stab,
		SwingSound = HuntingKnifeSwing,
		SwingTime = 2,
		TreeDamage = 0,
		WeaponLength = 0.25,
		WeaponSprite = TacticalKnife,
		Tags = CutPlant;SharpKnife;ButcherAnimal;Sharpenable;KillAnimal;ButcherAnimal,

        Sharpness = 1.1,
	}
	item TacticalMachete
	{
		DisplayName = Tactical Machete,
		DisplayCategory = Weapon,
		Type = Weapon,
		Weight = 1.8,
		Icon = TacticalMachete,
		AttachmentType = Sword,
		BaseSpeed = 1.1,
		BreakSound = MacheteBreak,
		Categories = LongBlade,
		ConditionLowerChanceOneIn = 30,
		ConditionMax = 13,
		CritDmgMultiplier = 5,
		CriticalChance = 20,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 10,
		DoorHitSound = MacheteHit,
		DropSound = MacheteDrop,
		HitFloorSound = MacheteHit,
		HitSound = MacheteHit,
		ImpactSound = MacheteHit,
		KnockBackOnNoDeath = FALSE,
		KnockdownMod = 2,
		MaxDamage = 3,
		MaxHitCount = 2,
		MaxRange = 1.25,
		MinAngle = 0.7,
		MinDamage = 2,
		MinRange = 0.61,
		MinimumSwingTime = 4,
		PushBackMod = 0.3,
		SplatBloodOnNoDeath = TRUE,
		SplatNumber = 2,
		SubCategory = Swinging,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Bat,
		SwingSound = MacheteSwing,
		SwingTime = 4,
		TreeDamage = 10,
		WeaponLength = 0.3,
		WeaponSprite = TacticalMachete,
		Tags = IgnoreZombieDensity;CutPlant;SharpKnife;ButcherAnimal;Sharpenable,

        Sharpness = 1.1,
	}
	item TacticalTomahawk
	{
		DisplayName = Tactical Tomahawk,
		DisplayCategory = Weapon,
		Type = Weapon,
		Weight = 2,
		Icon = TacticalTomahawk,
		AttachmentType = Hammer,
		BaseSpeed = 1.1,
		BreakSound = HandAxeBreak,
		Categories = Axe,
		ConditionLowerChanceOneIn = 20,
		ConditionMax = 12,
		CritDmgMultiplier = 5,
		CriticalChance = 15,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 20,
		DoorHitSound = HandAxeHit,
		DropSound = HandAxeDrop,
		HitFloorSound = HandAxeHit,
		HitSound = HandAxeHit,
		KnockBackOnNoDeath = FALSE,
		KnockdownMod = 2,
		MaxDamage = 1.6,
		MaxHitCount = 2,
		MaxRange = 1.1,
		MinAngle = 0.67,
		MinDamage = 0.7,
		MinRange = 0.6,
		MinimumSwingTime = 3,
		PushBackMod = 0.3,
		SplatBloodOnNoDeath = FALSE,
		SplatNumber = 2,
		SubCategory = Swinging,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Bat,
		SwingSound = HandAxeSwing,
		SwingTime = 4,
		TreeDamage = 15,
		WeaponLength = 0.35,
		WeaponSprite = TacticalTomahawkB42,
		Tags = ChopTree;CutPlant;ButcherAnimal;Sharpenable;KillAnimal;RepairWithTape;RepairWithGlue,

        Sharpness = 1.1,
	}
	item TacticalAxe
	{
		DisplayName = Tactical Axe,
		DisplayCategory = Weapon,
		Type = Weapon,
		Weight = 2.5,
		Icon = TacticalAxe,
		AttachmentType = BigBlade,
		BaseSpeed = 1.1,
		BreakSound = WoodAxeBreak,
		Categories = Axe,
		ConditionLowerChanceOneIn = 30,
		ConditionMax = 15,
		CritDmgMultiplier = 12,
		CriticalChance = 50,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 55,
		DoorHitSound = WoodAxeHit,
		DropSound = WoodAxeDrop,
		EnduranceMod = 2,
		HitAngleMod = -30,
		HitFloorSound = WoodAxeHit,
		HitSound = WoodAxeHit,
		IdleAnim = Idle_Weapon2,
		KnockBackOnNoDeath = TRUE,
		KnockdownMod = 3,
		MaxDamage = 3,
		MaxHitCount = 3,
		MaxRange = 1.35,
		MetalValue = 120,
		MinAngle = 0.8,
		MinDamage = 1.5,
		MinRange = 0.61,
		MinimumSwingTime = 0.5,
		PushBackMod = 0.5,
		RequiresEquippedBothHands = TRUE,
		RunAnim = Run_Weapon2,
		SplatBloodOnNoDeath = TRUE,
		SplatNumber = 3,
		SplatSize = 5,
		SubCategory = Swinging,
		SwingAmountBeforeImpact = 0.002,
		SwingAnim = Heavy,
		SwingSound = WoodAxeSwing,
		SwingTime = 0.5,
		TreeDamage = 55,
		TwoHandWeapon = TRUE,
		WeaponLength = 0.5,
		WeaponSprite = TacticalAxeB42,
		Tags = ChopTree;CutPlant;Sharpenable;RepairWithTape;RepairWithGlue,

        Sharpness = 1.1,
	}	
    craftRecipe MakeHalberd1
    {
        timedAction = Welding,
        time            = 1000,
        tags            = InHandCraft;Welding,
        category = Metalworking,
        needTobeLearn = True,
        SkillRequired = MetalWelding:5;Maintenance:5,
		xpAward = MetalWelding:20;Maintenance:10,
        AutoLearnAny = Maintenance:5;MetalWelding:5,
        inputs
        {
            item 4 [Base.BlowTorch],
            item 1 [TWeapons.TacticalAxe] flags[Prop1;IsHeadPart;InheritSharpness],
            item 1 [Base.LongStick;Base.Sapling] flags[Prop2;InheritCondition],
            item 1 [TWeapons.MilitaryKnife],
            item 2 [Base.Zipties;Base.LeatherStrips;Base.Twine] flags[DontReplace],
            item 1 tags[WeldingMask] mode:keep,
        }
        outputs
        {
            item 1 TWeapons.HalberdAxe,
        }
    }
    craftRecipe MakeHalberd2
    {
        timedAction = Welding,
        time            = 1000,
        tags            = InHandCraft;Welding,
        category = Metalworking,
        needTobeLearn = True,
        SkillRequired = MetalWelding:5,
		xpAward = MetalWelding:20,
        AutoLearnAny = MetalWelding:5,
        inputs
        {
            item 4 [Base.BlowTorch],
            item 1 [TWeapons.TacticalAxe] flags[Prop1;IsHeadPart;InheritSharpness],
            item 1 [Base.LongStick;Base.Sapling] flags[Prop2;InheritCondition],
            item 1 [TWeapons.MilitaryKnife],
            item 2 [Base.DuctTape],
            item 1 tags[WeldingMask] mode:keep,
        }
        outputs
        {
            item 1 TWeapons.HalberdAxe,
        }
    }
    craftRecipe HalberdAxeMode
    {
        timedAction = CraftKnifeSpear,
        time            = 0,
        tags            = InHandCraft;CanBeDoneInDark,
        category = Weaponry,
		CanWalk = true,
		OnCreate = Recipe.OnCreate.HalberdShift,
        inputs
        {
            item 1 [TWeapons.HalberdSpear] flags[Prop1;InheritCondition],
        }
        outputs
        {
            item 1 TWeapons.HalberdAxe,
        }
    }
	craftRecipe HalberdSpearMode
   {
        timedAction = CraftKnifeSpear,
        time            = 0,
        tags            = InHandCraft;CanBeDoneInDark,
        category = Weaponry,
		CanWalk = true,
		OnCreate = Recipe.OnCreate.HalberdShift,
        inputs
        {
            item 1 [TWeapons.HalberdAxe] flags[Prop1;InheritCondition],
        }
        outputs
        {
            item 1 TWeapons.HalberdSpear,
        }
    }
	item HalberdSpear
	{
		DisplayName = Halberd - Spear,
		DisplayCategory = WeaponCrafted,
		Type = Weapon,
		Weight = 3.2,
		Icon = Halberd,
		AttachmentType = Shovel,
		BreakSound = SpearHuntingKnifeBreak,
		Categories = Improvised;Spear,
		ConditionLowerChanceOneIn = 20,
		ConditionMax = 15,
		CritDmgMultiplier = 5,
		CriticalChance = 30,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 7,
		DoorHitSound = SpearHuntingKnifeHit,
		DropSound = WoodAxeDrop,
		EnduranceMod = 1.5,
		HitAngleMod = -10,
		HitFloorSound = SpearHuntingKnifeHit,
		HitSound = SpearHuntingKnifeHit,
		IdleAnim = Idle_Weapon2,
		ImpactSound = SpearHuntingKnifeHit,
		KnockBackOnNoDeath = FALSE,
		KnockdownMod = 0,
		MaxDamage = 2,
		MaxHitCount = 2,
		MaxRange = 1.7,
		MinAngle = 0.8,
		MinDamage = 1.5,
		MinRange = 0.98,
		MinimumSwingTime = 2,
		PushBackMod = 0.3,
		RunAnim = Run_Weapon2,
		SoundMap = SpearStab SpearHuntingKnifeStab,
		SplatBloodOnNoDeath = FALSE,
		SplatNumber = 1,
		SubCategory = Spear,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Spear,
		SwingSound = SpearHuntingKnifeSwing,
		SwingTime = 2,
		TreeDamage = 0,
		TwoHandWeapon = TRUE,
		WeaponSprite = Halberd,
		Tags = FishingSpear;Sharpenable;RepairWithGlue;RepairWithTape,

        Sharpness = 1.1,
        HeadCondition = 10,
		HeadConditionMax = 10,
        HeadConditionLowerChanceMultiplier = 1,
	}
	item HalberdAxe
	{
		DisplayName = Halberd - Axe,
		DisplayCategory = WeaponCrafted,
		Type = Weapon,
		Weight = 3.2,
		Icon = Halberd,
		AttachmentType = BigBlade,
		BaseSpeed = 1,
		BreakSound = WoodAxeBreak,
		Categories = Axe,
		ConditionLowerChanceOneIn = 20,
		ConditionMax = 15,
		CritDmgMultiplier = 12,
		CriticalChance = 50,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 55,
		DoorHitSound = WoodAxeHit,
		DropSound = WoodAxeDrop,
		EnduranceMod = 2.5,
		HitAngleMod = -30,
		HitFloorSound = WoodAxeHit,
		HitSound = WoodAxeHit,
		IdleAnim = Idle_Weapon2,
		KnockBackOnNoDeath = TRUE,
		KnockdownMod = 3,
		MaxDamage = 3.5,
		MaxHitCount = 3,
		MaxRange = 1.5,
		MetalValue = 120,
		MinAngle = 0.8,
		MinDamage = 2,
		MinRange = 0.75,
		MinimumSwingTime = 0.5,
		PushBackMod = 0.8,
		RequiresEquippedBothHands = TRUE,
		RunAnim = Run_Weapon2,
		SplatBloodOnNoDeath = TRUE,
		SplatNumber = 3,
		SplatSize = 5,
		SubCategory = Swinging,
		SwingAmountBeforeImpact = 0.002,
		SwingAnim = Heavy,
		SwingSound = WoodAxeSwing,
		SwingTime = 0.5,
		TreeDamage = 55,
		TwoHandWeapon = TRUE,
		WeaponLength = 0.55,
		WeaponSprite = Halberd,
		Tags = ChopTree;CutPlant;Sharpenable;RepairWithTape;RepairWithGlue,

        Sharpness = 1.1,
        HeadCondition = 15,
        HeadConditionLowerChanceMultiplier = 1.2,
	}
	item SpearTKnife
	{
		DisplayName = Spear with Hunting Knife,
		DisplayCategory = WeaponCrafted,
		Type = Weapon,
		Weight = 2.8,
		Icon = SpearTKnife,
		AttachmentType = Shovel,
		BaseSpeed = 1.1,
		BreakSound = SpearHuntingKnifeBreak,
		Categories = Improvised;Spear,
		ConditionLowerChanceOneIn = 12,
		ConditionMax = 10,
		CritDmgMultiplier = 5,
		CriticalChance = 25,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 7,
		DoorHitSound = SpearHuntingKnifeHit,
		EnduranceMod = 0.8,
		HitFloorSound = SpearHuntingKnifeHit,
		HitSound = SpearHuntingKnifeHit,
		IdleAnim = Idle_Weapon2,
		ImpactSound = SpearHuntingKnifeHit,
		KnockBackOnNoDeath = FALSE,
		KnockdownMod = 0,
		MaxDamage = 1.7,
		MaxHitCount = 2,
		MaxRange = 1.48,
		MinAngle = 0.8,
		MinDamage = 1.2,
		MinRange = 0.98,
		MinimumSwingTime = 2,
		PushBackMod = 0.3,
		RunAnim = Run_Weapon2,
		SoundMap = SpearStab SpearHuntingKnifeStab,
		SplatBloodOnNoDeath = FALSE,
		SplatNumber = 1,
		SubCategory = Spear,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Spear,
		SwingSound = SpearHuntingKnifeSwing,
		SwingTime = 2,
		TreeDamage = 0,
		TwoHandWeapon = TRUE,
		WeaponSprite = SpearTKnife,
		Tags = FishingSpear;Sharpenable;RepairWithGlue;RepairWithTape,

        Sharpness = 1.1,
        HeadCondition = 10,
		HeadConditionMax = 10,
        HeadConditionLowerChanceMultiplier = 1,
	}
	item SpearTMachete
	{
		DisplayName = Spear With Tactical Machete,
		DisplayCategory = WeaponCrafted,
		Type = Weapon,
		Weight = 3,
		Icon = SpearTMachete,
		AttachmentType = Shovel,
        BaseSpeed = 1.1,
		BreakSound = SpearHuntingKnifeBreak,
		Categories = Improvised;Spear,
		ConditionLowerChanceOneIn = 12,
		ConditionMax = 12,
		CritDmgMultiplier = 5,
		CriticalChance = 30,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 7,
		DoorHitSound = SpearHuntingKnifeHit,
		HitFloorSound = SpearHuntingKnifeHit,
		HitSound = SpearHuntingKnifeHit,
		IdleAnim = Idle_Weapon2,
		ImpactSound = SpearHuntingKnifeHit,
		KnockBackOnNoDeath = FALSE,
		KnockdownMod = 0,
		MaxDamage = 2,
		MaxHitCount = 2,
		MaxRange = 1.6,
		MinAngle = 0.8,
		MinDamage = 1.5,
		MinRange = 0.98,
		MinimumSwingTime = 2,
		PushBackMod = 0.3,
		RunAnim = Run_Weapon2,
		SoundMap = SpearStab SpearHuntingKnifeStab,
		SplatBloodOnNoDeath = FALSE,
		SplatNumber = 1,
		SubCategory = Spear,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Spear,
		SwingSound = SpearHuntingKnifeSwing,
		SwingTime = 2,
		TreeDamage = 0,
		TwoHandWeapon = TRUE,
		WeaponSprite = SpearTMachete,
		Tags = Sharpenable;RepairWithGlue;RepairWithTape,

        Sharpness = 1.1,
        HeadCondition = 10,
		HeadConditionMax = 10,
        HeadConditionLowerChanceMultiplier = 1,
	}
	item TacticalBlade
	{
		DisplayName = Tactical Ninja Sword,
		DisplayCategory = Weapon,
		Type = Weapon,
		Weight = 1.5,
		Icon = TacticalBlade,
		AttachmentType = Sword,
		BaseSpeed = 1.2,
		BreakSound = MacheteBreak,
		Categories = LongBlade,
		ConditionLowerChanceOneIn = 25,
		ConditionMax = 13,
		CritDmgMultiplier = 5,
		CriticalChance = 20,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 10,
		DoorHitSound = MacheteHit,
		DropSound = MacheteDrop,
		HitFloorSound = MacheteHit,
		HitSound = MacheteHit,
		ImpactSound = MacheteHit,
		KnockBackOnNoDeath = FALSE,
		KnockdownMod = 2,
		MaxDamage = 2.5,
		MaxHitCount = 2,
		MaxRange = 1.3,
		MinAngle = 0.7,
		MinDamage = 2,
		MinRange = 0.61,
		MinimumSwingTime = 4,
		PushBackMod = 0.3,
		SplatBloodOnNoDeath = TRUE,
		SplatNumber = 2,
		SubCategory = Swinging,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Bat,
		SwingSound = MacheteSwing,
		SwingTime = 4,
		TreeDamage = 10,
		WeaponLength = 0.3,
		WeaponSprite = TacticalBlade,
		Tags = IgnoreZombieDensity;CutPlant;SharpKnife;ButcherAnimal;Sharpenable,

        Sharpness = 1.1,
	}
	item SpearTBlade
	{
		DisplayName = Spear With Ninja Sword,
		DisplayCategory = WeaponCrafted,
		Type = Weapon,
		Weight = 2.8,
		Icon = SpearTBlade,
		AttachmentType = Shovel,
        BaseSpeed = 1.2,
		BreakSound = SpearHuntingKnifeBreak,
		Categories = Improvised;Spear,
		ConditionLowerChanceOneIn = 12,
		ConditionMax = 12,
		CritDmgMultiplier = 10,
		CriticalChance = 30,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 7,
		DoorHitSound = SpearHuntingKnifeHit,
		HitFloorSound = SpearHuntingKnifeHit,
		HitSound = SpearHuntingKnifeHit,
		IdleAnim = Idle_Weapon2,
		ImpactSound = SpearHuntingKnifeHit,
		KnockBackOnNoDeath = FALSE,
		KnockdownMod = 0,
		MaxDamage = 1.8,
		MaxHitCount = 2,
		MaxRange = 1.65,
		MinAngle = 0.8,
		MinDamage = 1.3,
		MinRange = 0.98,
		MinimumSwingTime = 2,
		PushBackMod = 0.3,
		RunAnim = Run_Weapon2,
		SoundMap = SpearStab SpearHuntingKnifeStab,
		SplatBloodOnNoDeath = FALSE,
		SplatNumber = 1,
		SubCategory = Spear,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Spear,
		SwingSound = SpearHuntingKnifeSwing,
		SwingTime = 2,
		TreeDamage = 0,
		TwoHandWeapon = TRUE,
		WeaponSprite = SpearTBlade,
		Tags = Sharpenable;RepairWithGlue;RepairWithTape,

        Sharpness = 1.1,
        HeadCondition = 10,
		HeadConditionMax = 10,
        HeadConditionLowerChanceMultiplier = 1,
	}
    craftRecipe BindTacticalSpear
    {
        time            = 300,
        Tags = InHandCraft;Survivalist,
        category = Weaponry,
        needTobeLearn = true,
        timedAction = CraftKnifeSpear,
        xpAward = Maintenance:5,
        SkillRequired = Maintenance:1,
        AutoLearnAny = Maintenance:4;Spear:4,
        MetaRecipe = BindSpear,
        inputs
        {
            item 1 [TWeapons.TacticalKnife;TWeapons.TacticalMachete;TWeapons.TacticalBlade] mappers[TacticalSpearMapper] flags[Prop1;IsHeadPart;InheritSharpness],
            item 1 [Base.LongStick;Base.Sapling] flags[Prop2;InheritCondition],
            item 2 [Base.Zipties;Base.LeatherStrips;Base.Twine] flags[DontReplace],
        }
        outputs
        {
            item 1 mapper:TacticalSpearMapper,
        }
        itemMapper TacticalSpearMapper
        {
            TWeapons.SpearTKnife = TWeapons.TacticalKnife,
            TWeapons.SpearTMachete = TWeapons.TacticalMachete,
            TWeapons.SpearTBlade = TWeapons.TacticalBlade,

            default = TWeapons.SpearTKnife,
        }
    }
    craftRecipe DuctTapeTacticalSpear
    {
        time            = 300,
        Tags = InHandCraft;Survivalist,
        category = Weaponry,
        needTobeLearn = false,
        timedAction = CraftKnifeSpear,
        inputs
        {
            item 1 [TWeapons.TacticalKnife;TWeapons.TacticalMachete;TWeapons.TacticalBlade] mappers[TacticalSpearMapper] flags[Prop1;IsHeadPart;InheritSharpness],
            item 1 [Base.LongStick;Base.Sapling] flags[Prop2;InheritCondition],
            item 2 [Base.DuctTape],
        }
        outputs
        {
            item 1 mapper:TacticalSpearMapper,
        }
        itemMapper TacticalSpearMapper
        {
            TWeapons.SpearTKnife = TWeapons.TacticalKnife,
            TWeapons.SpearTMachete = TWeapons.TacticalMachete,
            TWeapons.SpearTBlade = TWeapons.TacticalBlade,

            default = TWeapons.SpearTKnife,
        }
    }
    craftRecipe WireTacticalSpear
    {
        time            = 300,
        Tags = InHandCraft;Survivalist,
        category = Weaponry,
        needTobeLearn = true,
        SkillRequired = Maintenance:1,
        timedAction = CraftKnifeSpear,
        xpAward = Maintenance:5,
        AutoLearnAny = Maintenance:4;Spear:4,
        MetaRecipe = BindSpear,
        inputs
        {
            item 1 [TWeapons.TacticalKnife;TWeapons.TacticalMachete;TWeapons.TacticalBlade] mappers[TacticalSpearMapper] flags[Prop1;IsHeadPart;InheritSharpness],
            item 1 [Base.LongStick;Base.Sapling] flags[Prop2;InheritCondition],
            item 2 [Base.Wire;Base.ElectricWire],
            item 1 tags[Pliers] mode:keep,
        }
        outputs
        {
            item 1 mapper:TacticalSpearMapper,
        }
        itemMapper TacticalSpearMapper
        {
            TWeapons.SpearTKnife = TWeapons.TacticalKnife,
            TWeapons.SpearTMachete = TWeapons.TacticalMachete,
            TWeapons.SpearTBlade = TWeapons.TacticalBlade,

            default = TWeapons.SpearTKnife,
        }
    }
    craftRecipe TWReclaimFromSpear
	{
        timedAction = CraftKnifeSpear,
        Time = 60,
        Tags = InHandCraft;Survivalist,
        category = Assembly,
        OnCreate = Recipe.OnCreate.DismantleSpear,
		inputs
		{
			item 1 [TWeapons.SpearTKnife;TWeapons.SpearTMachete;TWeapons.SpearTBlade] flags[Prop2;InheritSharpness] mappers[TweaponsType],
		}
		outputs
		{
			item 1 mapper:TweaponsType,
			item 1 Base.LongStick,
		}
		itemMapper TweaponsType
		{
			TWeapons.TacticalKnife = TWeapons.SpearTKnife,
            TWeapons.TacticalMachete = TWeapons.SpearTMachete,
            TWeapons.TacticalBlade = TWeapons.SpearTBlade,

            default = TWeapons.TacticalKnife,
		}
	}
}