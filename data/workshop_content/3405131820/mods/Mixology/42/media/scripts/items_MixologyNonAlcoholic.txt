module Mixology
{   
item GatoradeCool-Blue
{
    DisplayName = Gatorade Cool Blue,
    DisplayCategory = Food,
    Type = Normal,
    Weight = 0.2,
    Icon = Icons/Gatorade,
    secondaryAnimMask = drinkIdle,
    IconFluidMask = Icons/GatoradeMASK,
    Tooltip = Tooltip_item_RainFromGround,
    StaticModel = Gatorade_Blue_Ground,
    WorldStaticModel = Gatorade_Blue_Ground,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    Tags = CoffeeMaker;CookableMicrowave,


    component FluidContainer
    {
        ContainerName   = GatoradeBottle,
        RainFactor    = 0.5,
        capacity        = 0.2,
        CustomDrinkSound = DrinkingFromMug,

        Fluids
          {
           fluid           = GatoradeCoolBlue:1.0,
          }
    }
}

    item GatoradeLemon-Lime
{
    DisplayName = GatoradeLemon-Lime,
    DisplayCategory = Food,
    Type = Normal,
    Weight = 0.2,
    Icon = Icons/Gatorade,
    secondaryAnimMask = drinkIdle,
    IconFluidMask = Icons/GatoradeMASK,
    Tooltip = Tooltip_item_RainFromGround,
    StaticModel = Gatorade_Lemon_Ground,
    WorldStaticModel = Gatorade_Lemon_Ground,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    Tags = CoffeeMaker;CookableMicrowave,


    component FluidContainer
    {
        ContainerName   = GatoradeBottle,
        RainFactor    = 0.5,
        capacity        = 0.2,
        CustomDrinkSound = DrinkingFromMug,

        Fluids
          {
           fluid           = GatoradeLemonLime:1.0,
          }
    }
}

    item GatoradeOrange
{
    DisplayName = Gatorade Orange,
    DisplayCategory = Food,
    Type = Normal,
    Weight = 0.2,
    Icon = Icons/Gatorade,
    secondaryAnimMask = drinkIdle,
    IconFluidMask = Icons/GatoradeMASK,
    Tooltip = Tooltip_item_RainFromGround,
    StaticModel = Gatorade_Orange_Ground,
    WorldStaticModel = Gatorade_Orange_Ground,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    Tags = CoffeeMaker;CookableMicrowave,


    component FluidContainer
    {
        ContainerName   = GatoradeBottle,
        RainFactor    = 0.5,
        capacity        = 0.2,
        CustomDrinkSound = DrinkingFromMug,

        Fluids
          {
           fluid           = GatoradeOrange:1.0,
          }
    }
}

    item GatoradeFruit-Punch
{
    DisplayName = Gatorade Fruit Punch,
    DisplayCategory = Food,
    Type = Normal,
    Weight = 0.2,
    Icon = Icons/Gatorade,
    secondaryAnimMask = drinkIdle,
    IconFluidMask = Icons/GatoradeMASK,
    Tooltip = Tooltip_item_RainFromGround,
    StaticModel = Gatorade_Punch_Ground,
    WorldStaticModel = Gatorade_Punch_Ground,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    Tags = CoffeeMaker;CookableMicrowave,


    component FluidContainer
    {
        ContainerName   = GatoradeBottle,
        RainFactor    = 0.5,
        capacity        = 0.2,
        CustomDrinkSound = DrinkingFromMug,

        Fluids
          {
           fluid           = GatoradeFruitPunch:1.0,
          }
    }
}
item ColaBottle
{
    DisplayName = ColaBottle,
    DisplayCategory = Food,
    Type = Normal,
    Weight = 0.1,
    Icon = Icons/ColaBottle,
    secondaryAnimMask = drinkIdle,
    IconFluidMask = Icons/ColaBottleMASK,
    Tooltip = Tooltip_item_RainFromGround,
    StaticModel = ColaBottle_Ground,
    WorldStaticModel = ColaBottle_Ground,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    Tags = CoffeeMaker;Glass;GlassBottle,


    component FluidContainer
    {
        ContainerName   = ColaBottle,
        RainFactor      = 0.7,
        capacity        = 0.35,
        CustomDrinkSound = DrinkingFromMug,
        Fluids
          {
           fluid           = Cola:1.0,
          }
    }
}

	item StrawberrySyrup
	{
        DisplayName = Strawberry Syrup,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 0.1,
        secondaryAnimMask = drinkIdle,
        Icon     = Icons/StrawberrySyrup,
        IconFluidMask       = Icons/StrawberrySyrupMask,
        CustomContextMenu = Drink,
        EatType = Bourbon,
        StaticModel = StrawberrySyrup_Ground,
        WorldStaticModel = StrawberrySyrup_Ground,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = SyrupBottle,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottlePlastic,

            Fluids
            {
                fluid           = StrawberrySyrup:1.0,
            }
        }
	}

	item PumpkinSyrup
	{
        DisplayName = Pumpkin Syrup,
        DisplayCategory = Food,
        Type = Normal,
        secondaryAnimMask = drinkIdle,
        Weight = 0.1,
        Icon     = Icons/PumpkinSyrup,
        IconFluidMask       = Icons/PumpkinSyrupMask,
        CustomContextMenu = Drink,
        EatType = Bourbon,
        StaticModel = PumpkinSyrup_Ground,
        WorldStaticModel = PumpkinSyrup_Ground,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = SyrupBottle,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottlePlastic,

            Fluids
            {
                fluid           = PumpkinSyrup:1.0,
            }
        }
	}

  	item ChocolateSyrup
	{
        DisplayName = Chocolate Syrup,
        DisplayCategory = Food,
        Type = Normal,
        secondaryAnimMask = drinkIdle,
        Weight = 0.1,
        Icon     = Icons/ChocolateSyrup,
        IconFluidMask       = Icons/ChocolateSyrupMask,
        CustomContextMenu = Drink,
        EatType = Bourbon,
        StaticModel = ChocolateSyrup_Ground,
        WorldStaticModel = ChocolateSyrup_Ground,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = SyrupBottle,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottlePlastic,

            Fluids
            {
                fluid           = ChocolateSyrup:1.0,
            }
        }
	}  

	item RedbullCan
	{
		DisplayName = Redbull Can,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
		EatType = popcan,
                secondaryAnimMask = drinkIdle,
                Icon     = Icons/RedbullCan,
		StaticModel = Redbull_Ground,
		WorldStaticModel = Redbull_Ground,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = RedbullCan,
                Opened	= false,
            	capacity        = 0.3,
                CustomDrinkSound = DrinkingFromCan,

            Fluids
            	{
                fluid           = EnergyDrink:1.0,
            	}
        	}
	}

	item MonsterBlackCan
	{
		DisplayName = Monster Energy,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
		EatType = popcan,
        secondaryAnimMask = drinkIdle,
        Icon     = Icons/MonsterBlackCan,
		StaticModel = Monster_Black_Ground,
		WorldStaticModel = Monster_Black_Ground,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = MonsterCan,
                Opened	= false,
            	capacity        = 0.3,
                CustomDrinkSound = DrinkingFromCan,

            Fluids
            	{
                fluid           = EnergyDrink:1.0,
            	}
        	}
	}

	item MonsterWhiteCan
	{
		DisplayName = Monster Energy Ultra Zero,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
		EatType = popcan,
        secondaryAnimMask = drinkIdle,
        Icon     = Icons/MonsterWhiteCan,
		StaticModel = Monster_White_Ground,
		WorldStaticModel = Monster_White_Ground,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = MonsterCan,
                Opened	= false,
            	capacity        = 0.3,
                CustomDrinkSound = DrinkingFromCan,

            Fluids
            	{
                fluid           = EnergyDrink:1.0,
            	}
        	}
	}

	item MonsterPunchCan
	{
		DisplayName = Monster Energy Pipeline Punch,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
		EatType = popcan,
        secondaryAnimMask = drinkIdle,
        Icon     = Icons/MonsterPunchCan,
		StaticModel = Monster_Punch_Ground,
		WorldStaticModel = Monster_Punch_Ground,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = MonsterCan,
                Opened	= false,
            	capacity        = 0.3,
                CustomDrinkSound = DrinkingFromCan,

            Fluids
            	{
                fluid           = EnergyDrink:1.0,
            	}
        	}
	}

	item MonsterLocoCan
	{
		DisplayName = Monster Energy Mango Loco,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
		EatType = popcan,
        secondaryAnimMask = drinkIdle,
        Icon     = Icons/MonsterLocoCan,
		StaticModel = Monster_Loco_Ground,
		WorldStaticModel = Monster_Loco_Ground,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = MonsterCan,
                Opened	= false,
            	capacity        = 0.3,
                CustomDrinkSound = DrinkingFromCan,

            Fluids
            	{
                fluid           = EnergyDrink:1.0,
            	}
        	}
	}

item Tonic
{
    DisplayName = Tonic Water,
    DisplayCategory = Food,
    Type = Normal,
    Weight = 0.1,
    Icon = Icons/Tonic,
    IconFluidMask = Icons/TonicMask,
    secondaryAnimMask = drinkIdle,
    Tooltip = Tooltip_item_RainFromGround,
    StaticModel = Tonic_Ground,
    WorldStaticModel = Tonic_Ground,
    Packaged = TRUE,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    Tags = CoffeeMaker;CookableMicrowave,


    component FluidContainer
    {
        ContainerName   = Tonic,
        RainFactor      = 0.5,
        capacity        = 1.0,
        CustomDrinkSound = DrinkingFromBottlePlastic,
             	Fluids
            		{
                	fluid           = Tonic:1.0,
            		}
    }
}

item SunnyD
{
    DisplayName = Sunny D,
    DisplayCategory = Food,
    Type = Normal,
    Weight = 0.1,
    Icon = Icons/SunnyD,
    IconFluidMask = Icons/SunnyDMask,
    secondaryAnimMask = drinkIdle,
    Tooltip = Tooltip_item_RainFromGround,
    StaticModel = SunnyD_Ground,
    WorldStaticModel = SunnyD_Ground,
    Packaged = TRUE,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    Tags = CoffeeMaker;CookableMicrowave,


    component FluidContainer
    {
        ContainerName   = SunnyD,
        RainFactor      = 0.5,
        capacity        = 1.0,
        CustomDrinkSound = DrinkingFromBottlePlastic,
             	Fluids
            		{
                	fluid           = SunnyD:1.0,
            		}
    }
}

item CapriSunPacific
{
    DisplayName = CapriSun Pacific Cooler,
    DisplayCategory = Food,
    Type = Normal,
    Weight = 0.1,
    Icon = Icons/CapriSunPacific,
    secondaryAnimMask = drinkIdle,
    StaticModel = CapriSunPacific_Ground,
    WorldStaticModel = CapriSunPacific_Ground,
    Packaged = TRUE,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    Tags = SealedBeverageCan,
    EatType = caprisip,



    component FluidContainer
    {
        ContainerName   = CapriSunPouch,
        RainFactor      = 0.5,
        capacity        = 1.0,
        CustomDrinkSound = BIGSLURPIN,
             	Fluids
            		{
                	fluid           = CapriSunPacificCooler:1.0,
            		}
    }
}

item CapriSunOrange
{
    DisplayName = CapriSun Orange,
    DisplayCategory = Food,
    Type = Normal,
    Weight = 0.1,
    Icon = Icons/CapriSunOrange,
    secondaryAnimMask = drinkIdle,
    StaticModel = CapriSunOrange_Ground,
    WorldStaticModel = CapriSunOrange_Ground,
    Packaged = TRUE,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    Tags = SealedBeverageCan,
    EatType = caprisip,


    component FluidContainer
    {
        ContainerName   = CapriSunPouch,
        RainFactor      = 0.5,
        capacity        = 1.0,
        CustomDrinkSound = BIGSLURPIN,
             	Fluids
            		{
                	fluid           = CapriSunOrange:1.0,
            		}
    }
}

item CapriSunFruit
{
    DisplayName = CapriSun Fruit Punch,
    DisplayCategory = Food,
    Type = Normal,
    Weight = 0.1,
    Icon = Icons/CapriSunFruit,
    secondaryAnimMask = drinkIdle,
    StaticModel = CapriSunFruit_Ground,
    WorldStaticModel = CapriSunFruit_Ground,
    Packaged = TRUE,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    Tags = SealedBeverageCan,
    EatType = caprisip,

    component FluidContainer
    {
        ContainerName   = CapriSunPouch,
        RainFactor      = 0.5,
        capacity        = 1.0,
        CustomDrinkSound = BIGSLURPIN,
             	Fluids
            		{
                	fluid           = CapriSunFruitPunch:1.0,
            		}
    }
}

}