module BagUpgradePlusRecipes {
imports { Base, BagUpgradePlus, }
/********* BACKPACKS *********/
  /***** ALICE / MILITARY BACKPACKS *****/
	craftRecipe ALICEpackUpgradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagUpgrades Plus,
        NeedToBeLearn = False,
        xpAward = Tailoring:15,
		inputs
		{
			item 1 [Base.Bag_SurvivorBag;Base.Bag_ALICEpack;Base.Bag_ALICEpack_Army;Base.Bag_ALICEpack_DesertCamo] mode:destroy flags[IsEmptyContainer] mappers[aliceTypePlusUp],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
			item 1 tags[SewingNeedle] mode:keep,
			item 5 [Base.Thread] mode:destroy,
			item 25 [Base.LeatherStrips] mode:destroy,
			item 150 [Base.Money] mode:destroy,
		}
		outputs
		{
			item 1 mapper:aliceTypePlusUp,
		}
		itemMapper aliceTypePlusUp {
			BagUpgradePlus.ALICEpackPlus 			= Base.Bag_SurvivorBag,
			BagUpgradePlus.ALICEpackPlus 			= Base.Bag_ALICEpack,
			BagUpgradePlus.ALICEpack_CamoPlus 		= Base.Bag_ALICEpack_Army,
			BagUpgradePlus.ALICEpack_DesertCamoPlus = Base.Bag_ALICEpack_DesertCamo,
		} }
	craftRecipe ALICEpackDowngradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagDowngrades,
        NeedToBeLearn = False,
		inputs
		{
			item 1 [BagUpgradePlus.ALICEpackPlus;BagUpgradePlus.ALICEpack_CamoPlus;BagUpgradePlus.ALICEpack_DesertCamoPlus] mode:destroy flags[IsEmptyContainer] mappers[aliceTypePlusDown],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
		}
		outputs
		{
			item 1 mapper:aliceTypePlusDown,
		}
		itemMapper aliceTypePlusDown {
			Base.Bag_ALICEpack 				= BagUpgradePlus.ALICEpackPlus,
			Base.Bag_ALICEpack_Army 		= BagUpgradePlus.ALICEpack_CamoPlus,
			Base.Bag_ALICEpack_DesertCamo 	= BagUpgradePlus.ALICEpack_DesertCamoPlus,
		} }
  /***** DUFFEL BAGS *****/
	craftRecipe DuffelUpgradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagUpgrades Plus,
        NeedToBeLearn = False,
        xpAward = Tailoring:15,
		inputs
		{
			item 1 [Base.Bag_DuffelBag;Base.Bag_MedicalBag;Base.Bag_Military;Base.Bag_Police;Base.Bag_Sheriff;Base.Bag_SWAT] mode:destroy flags[IsEmptyContainer] mappers[duffelTypePlusUp],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
			item 1 tags[SewingNeedle] mode:keep,
			item 5 [Base.Thread] mode:destroy,
			item 25 [Base.LeatherStrips] mode:destroy,
			item 150 [Base.Money] mode:destroy,
		}
		outputs
		{
			item 1 mapper:duffelTypePlusUp,
		}
		itemMapper duffelTypePlusUp {
			BagUpgradePlus.DuffelPlus 	= Base.Bag_DuffelBag,
			BagUpgradePlus.MedicalPlus 	= Base.Bag_MedicalBag,
			BagUpgradePlus.MilitaryPlus = Base.Bag_Military,
			BagUpgradePlus.PolicePlus 	= Base.Bag_Police,
			BagUpgradePlus.SheriffPlus 	= Base.Bag_Sheriff,
			BagUpgradePlus.SWATPlus 	= Base.Bag_SWAT,
		} }
	craftRecipe DuffelDowngradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagDowngrades,
        NeedToBeLearn = False,
		inputs
		{
			item 1 [BagUpgradePlus.DuffelPlus;BagUpgradePlus.MedicalPlus;BagUpgradePlus.MilitaryPlus;BagUpgradePlus.PolicePlus;BagUpgradePlus.SheriffPlus;BagUpgradePlus.SWATPlus] mode:destroy flags[IsEmptyContainer] mappers[duffelTypePlusDown],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
		}
		outputs
		{
			item 1 mapper:duffelTypePlusDown,
		}
		itemMapper duffelTypePlusDown {
			Base.Bag_DuffelBag 	= BagUpgradePlus.DuffelPlus,
			Base.Bag_MedicalBag = BagUpgradePlus.MedicalPlus,			
			Base.Bag_Military 	= BagUpgradePlus.MilitaryPlus,
			Base.Bag_Police 	= BagUpgradePlus.PolicePlus,
			Base.Bag_Sheriff 	= BagUpgradePlus.SheriffPlus,
			Base.Bag_SWAT 		= BagUpgradePlus.SWATPlus,
		} }
  /***** FANNY PACKS *****/
	craftRecipe FannyPackUpgradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagUpgrades Plus,
        NeedToBeLearn = False,
        xpAward = Tailoring:15,
		inputs
		{
			item 1 [Base.Bag_FannyPackFront;Base.Bag_FannyPackBack] mode:destroy flags[IsEmptyContainer] mappers[fannyTypePlusUp],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
			item 1 tags[SewingNeedle] mode:keep,
			item 5 [Base.Thread] mode:destroy,
			item 25 [Base.LeatherStrips] mode:destroy,
			item 150 [Base.Money] mode:destroy,
		}
		outputs
		{
			item 1 mapper:fannyTypePlusUp,
		}
		itemMapper fannyTypePlusUp {
			BagUpgradePlus.FannyPackBackPlus 	= Base.Bag_FannyPackBack,
			BagUpgradePlus.FannyPackFrontPlus 	= Base.Bag_FannyPackFront,
		} }
	craftRecipe FannyPackDowngradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagDowngrades,
        NeedToBeLearn = False,
		inputs
		{
			item 1 [BagUpgradePlus.FannyPackFrontPlus;BagUpgradePlus.FannyPackBackPlus] mode:destroy flags[IsEmptyContainer] mappers[fannyTypePlusDown],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
		}
		outputs
		{
			item 1 mapper:fannyTypePlusDown,
		}
		itemMapper fannyTypePlusDown {
			Base.Bag_FannyPackBack 	= BagUpgradePlus.FannyPackBackPlus,
			Base.Bag_FannyPackFront = BagUpgradePlus.FannyPackFrontPlus,
		} }
  /***** FLUID CONTAINERS *****/
	craftRecipe HydrationBackpackUpgradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagUpgrades Plus,
        NeedToBeLearn = False,
        xpAward = Tailoring:15,
		inputs
		{
			item 1 [Base.Bag_HydrationBackpack;Base.Bag_HydrationBackpack_Camo] mode:destroy flags[IsEmptyContainer] mappers[hydroTypePlusUp],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
			item 1 tags[SewingNeedle] mode:keep,
			item 5 [Base.Thread] mode:destroy,
			item 25 [Base.LeatherStrips] mode:destroy,
			item 150 [Base.Money] mode:destroy,
		}
		outputs
		{
			item 1 mapper:hydroTypePlusUp,
		}
		itemMapper hydroTypePlusUp {
			BagUpgradePlus.HydrationBackpackPlus 		= Base.Bag_HydrationBackpack,
			BagUpgradePlus.HydrationBackpackPlus_Camo 	= Base.Bag_HydrationBackpack_Camo,
		} }
	craftRecipe HydrationBackpackDowngradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagDowngrades,
        NeedToBeLearn = False,
		inputs
		{
			item 1 [BagUpgradePlus.HydrationBackpackPlus;BagUpgradePlus.HydrationBackpackPlus_Camo] mode:destroy flags[IsEmptyContainer] mappers[hydroTypePlusDown],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
		}
		outputs
		{
			item 1 mapper:hydroTypePlusDown,
		}
		itemMapper hydroTypePlusDown {
			Base.Bag_HydrationBackpack 		= BagUpgradePlus.HydrationBackpackPlus,
			Base.Bag_HydrationBackpack_Camo = BagUpgradePlus.HydrationBackpackPlus_Camo,
		} }
  /***** HIKING BACKPACKS *****/
	craftRecipe HikingBagUpgradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagUpgrades Plus,
        NeedToBeLearn = False,
        xpAward = Tailoring:15,
		inputs
		{
			item 1 [Base.Bag_NormalHikingBag;Base.Bag_BigHikingBag;Base.Bag_HikingBag_Travel] mode:destroy flags[IsEmptyContainer] mappers[hikingTypePlusUp],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
			item 1 tags[SewingNeedle] mode:keep,
			item 5 [Base.Thread] mode:destroy,
			item 25 [Base.LeatherStrips] mode:destroy,
			item 150 [Base.Money] mode:destroy,
		}
		outputs
		{
			item 1 mapper:hikingTypePlusUp,
		}
		itemMapper hikingTypePlusUp {
			BagUpgradePlus.HikingBagPlus 			= Base.Bag_NormalHikingBag,
			BagUpgradePlus.BigHikingBagplus 		= Base.Bag_BigHikingBag,
			BagUpgradePlus.BigHikingBagPlus_Travel 	= Base.Bag_HikingBag_Travel,
		} }
	craftRecipe HikingBagDowngradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagDowngrades,
        NeedToBeLearn = False,
		inputs
		{
			item 1 [BagUpgradePlus.HikingBagPlus;BagUpgradePlus.BigHikingBagplus;BagUpgradePlus.BigHikingBagPlus_Travel] mode:destroy flags[IsEmptyContainer] mappers[hikingTypePlusDown],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
		}
		outputs
		{
			item 1 mapper:hikingTypePlusDown,
		}
		itemMapper hikingTypePlusDown {
			Base.Bag_NormalHikingBag 	= BagUpgradePlus.HikingBagPlus,
			Base.Bag_BigHikingBag 		= BagUpgradePlus.BigHikingBagplus,
			Base.Bag_HikingBag_Travel 	= BagUpgradePlus.BigHikingBagPlus_Travel,
		} }		
  /***** MISC BAGS *****/
	craftRecipe SchoolbagUpgradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagUpgrades Plus,
        NeedToBeLearn = False,
        xpAward = Tailoring:15,
		inputs
		{
			item 1 [Base.Bag_Schoolbag] mode:destroy flags[IsEmptyContainer],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
			item 1 tags[SewingNeedle] mode:keep,
			item 5 [Base.Thread] mode:destroy,
			item 25 [Base.LeatherStrips] mode:destroy,
			item 150 [Base.Money] mode:destroy,
		}
		outputs
		{
			item 1 BagUpgradePlus.SchoolbagPlus,
		} }
	craftRecipe SchoolbagDowngradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagDowngrades,
        NeedToBeLearn = False,
		inputs
		{
			item 1 [BagUpgradePlus.SchoolbagPlus] mode:destroy flags[IsEmptyContainer],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
		}
		outputs
		{
			item 1 Base.Bag_Schoolbag,
		} } 
  /***** SATCHELS *****/
	craftRecipe SatchelUpgradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagUpgrades Plus,
        NeedToBeLearn = False,
        xpAward = Tailoring:15,
		inputs
		{
			item 1 [Base.Bag_Satchel;Base.Bag_Satchel_Fishing;Base.Bag_Satchel_Medical;Base.Bag_Satchel_Military] mode:destroy flags[IsEmptyContainer] mappers[satchelTypePlusUp],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
			item 1 tags[SewingNeedle] mode:keep,
			item 5 [Base.Thread] mode:destroy,
			item 25 [Base.LeatherStrips] mode:destroy,
			item 150 [Base.Money] mode:destroy,
		}
		outputs
		{
			item 1 mapper:satchelTypePlusUp,
		}
		itemMapper satchelTypePlusUp {
			BagUpgradePlus.SatchelPlus 			= Base.Bag_Satchel,
			BagUpgradePlus.Satchel_FishingPlus 	= Base.Bag_Satchel_Fishing,
			BagUpgradePlus.Satchel_MedicalPlus 	= Base.Bag_Satchel_Medical,
			BagUpgradePlus.Satchel_MilitaryPlus = Base.Bag_Satchel_Military,
		} }
	craftRecipe SatchelDowngradePlus {
		timedAction = Sew,
		Time = 200,
		Tags = InHandCraft;CanBeDoneInDark,
        Category = BagDowngrades,
        NeedToBeLearn = False,
		inputs
		{
			item 1 [BagUpgradePlus.SatchelPlus;BagUpgradePlus.Satchel_FishingPlus;BagUpgradePlus.Satchel_MedicalPlus;BagUpgradePlus.Satchel_MilitaryPlus] mode:destroy flags[IsEmptyContainer] mappers[satchelTypePlusDown],
			item 1 tags[Scissors;SharpKnife] mode:keep flags[MayDegradeLight;IsNotDull],
		}
		outputs
		{
			item 1 mapper:satchelTypePlusDown,
		}
		itemMapper satchelTypePlusDown {
			Base.Bag_Satchel 			= BagUpgradePlus.SatchelPlus,
			Base.Bag_Satchel_Fishing 	= BagUpgradePlus.Satchel_FishingPlus,
			Base.Bag_Satchel_Medical 	= BagUpgradePlus.Satchel_MedicalPlus,
			Base.Bag_Satchel_Military 	= BagUpgradePlus.Satchel_MilitaryPlus,
		} }
}