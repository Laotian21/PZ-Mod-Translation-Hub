module SupportCorps
{
    imports
    {
    Base,
    }

    item SealedBeerLQ
    {
        DisplayName = Bottle of Beer - Low Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = LQBeer:1.0,
            }
        }
    }

    item SealedBeer
    {
        DisplayName = Bottle of Beer,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = Beer:1.0,
            }
        }
    }

    item SealedBeerHQ
    {
        DisplayName = Bottle of Beer - High Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
	DaysFresh = 29,
	CantEat = TRUE,
	DaysTotallyRotten = 30,
	ReplaceOnRotten = SealedBeerWA,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = HQBeer:1.0,
            }
        }
    }

    item SealedMeadLQ
    {
        DisplayName = Bottle of Mead - Low Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = LQMead:1.0,
            }
        }
    }

    item SealedMead
    {
        DisplayName = Bottle of Mead,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = Mead:1.0,
            }
        }
    }

    item SealedMeadHQ
    {
        DisplayName = Bottle of Mead - High Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
	DaysFresh = 29,
	CantEat = TRUE,
	DaysTotallyRotten = 30,
	ReplaceOnRotten = SealedMeadWA,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = HQMead:1.0,
            }
        }
    }
    item SealedBerrywineLQ
    {
        DisplayName = Bottle of Berrywine - Low Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CorkAlcoholBottle,
        WorldStaticModel = CorkAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = LQBerrywine:1.0,
            }
        }
    }

    item SealedBerrywine
    {
        DisplayName = Bottle of Berrywine,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CorkAlcoholBottle,
        WorldStaticModel = CorkAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = Berrywine:1.0,
            }
        }
    }

    item SealedBerrywineHQ
    {
        DisplayName = Bottle of Berrywine - High Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
	DaysFresh = 29,
	CantEat = TRUE,
	DaysTotallyRotten = 30,
	ReplaceOnRotten = SealedBerryWineWA,
        StaticModel = CorkAlcoholBottle,
        WorldStaticModel = CorkAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = HQBerrywine:1.0,
            }
        }
    }

    item SealedWhiskeyLQ
    {
        DisplayName = Bottle of Whiskey - Low Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = LQWhiskey:1.0,
            }
        }
    }

    item SealedWhiskey
    {
        DisplayName = Bottle of Whiskey,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = Whiskey:1.0,
            }
        }
    }

    item SealedWhiskeyHQ
    {
        DisplayName = Bottle of Whiskey - High Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
	DaysFresh = 29,
	CantEat = TRUE,
	DaysTotallyRotten = 30,
	ReplaceOnRotten = SealedWhiskeyWA,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = HQWhiskey:1.0,
            }
        }
    }

    item SealedVodkaLQ
    {
        DisplayName = Bottle of Vodka - Low Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = LQVodka:1.0,
            }
        }
    }

    item SealedVodka
    {
        DisplayName = Bottle of Vodka,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = Vodka:1.0,
            }
        }
    }

    item SealedVodkaHQ
    {
        DisplayName = Bottle of Vodka - High Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
	DaysFresh = 29,
	CantEat = TRUE,
	DaysTotallyRotten = 30,
	ReplaceOnRotten = SealedVodkaWA,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = HQVodka:1.0,
            }
        }
    }
    item SealedGinLQ
    {
        DisplayName = Bottle of Gin - Low Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = LQGin:1.0,
            }
        }
    }

    item SealedGin
    {
        DisplayName = Bottle of Gin,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = Gin:1.0,
            }
        }
    }

    item SealedGinHQ
    {
        DisplayName = Bottle of Gin - High Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
	DaysFresh = 29,
	CantEat = TRUE,
	DaysTotallyRotten = 30,
	ReplaceOnRotten = SealedGinWA,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = HQGin:1.0,
            }
        }
    }

    item SealedWineLQ
    {
        DisplayName = Bottle of Wine - Low Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CorkAlcoholBottle,
        WorldStaticModel = CorkAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = LQWine:1.0,
            }
        }
    }

    item SealedWine
    {
        DisplayName = Bottle of Wine,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CorkAlcoholBottle,
        WorldStaticModel = CorkAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = Wine:1.0,
            }
        }
    }

    item SealedWineHQ
    {
        DisplayName = Bottle of Wine - High Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
	DaysFresh = 29,
	CantEat = TRUE,
	DaysTotallyRotten = 30,
	ReplaceOnRotten = SealedRedWineWA,
        StaticModel = CorkAlcoholBottle,
        WorldStaticModel = CorkAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = HQWine:1.0,
            }
        }
    }

    item SealedWhiteWineLQ
    {
        DisplayName = Bottle of White Wine - Low Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CorkAlcoholBottle,
        WorldStaticModel = CorkAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = LQWine:1.0:0.65:0.8:0.65,
            }
        }
    }

    item SealedWhiteWine
    {
        DisplayName = Bottle of White Wine,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CorkAlcoholBottle,
        WorldStaticModel = CorkAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = Wine:1.0:0.65:0.8:0.65,
            }
        }
    }

    item SealedWhiteWineHQ
    {
        DisplayName = Bottle of White Wine - High Quality,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
	EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
	DaysFresh = 29,
	CantEat = TRUE,
	DaysTotallyRotten = 30,
	ReplaceOnRotten = SealedWhiteWineWA,
        StaticModel = CorkAlcoholBottle,
        WorldStaticModel = CorkAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = AlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = HQWine:1.0:0.65:0.8:0.65,
            }
        }
    }

item OpenedBeerLQ
{
    DisplayName = Bottle of Beer - Low Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,

    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = LQBeer:1.0,
    }
    }
}
item OpenedBeer
{
    DisplayName = Bottle of Beer (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = Beer:1.0,
    }
    }
}
item OpenedBeerHQ
{
    DisplayName = Bottle of Beer - High Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = HQBeer:1.0,
    }
    }
}
item OpenedMeadLQ
{
    DisplayName = Bottle of Mead - Low Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = LQMead:1.0,
    }
    }
}
item OpenedMead
{
    DisplayName = Bottle of Mead (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = Mead:1.0,
    }
    }
}
item OpenedMeadHQ
{
    DisplayName = Bottle of Mead - High Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = HQMead:1.0,
    }
    }
}
item OpenedBerrywineLQ
{
    DisplayName = Bottle of Berrywine - Low Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = LQBerrywine:1.0,
    }
    }
}
item OpenedBerrywine
{
    DisplayName = Bottle of Berrywine (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = Berrywine:1.0,
    }
    }
}
item OpenedBerrywineHQ
{
    DisplayName = Bottle of Berrywine - High Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = HQBerrywine:1.0,
    }
    }
}
item OpenedWhiskeyLQ
{
    DisplayName = Bottle of Whiskey - Low Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = LQWhiskey:1.0,
    }
    }
}
item OpenedWhiskey
{
    DisplayName = Bottle of Whiskey (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = Whiskey:1.0,
    }
    }
}
item OpenedWhiskeyHQ
{
    DisplayName = Bottle of Whiskey - High Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = HQWhiskey:1.0,
    }
    }
}
item OpenedVodkaLQ
{
    DisplayName = Bottle of Vodka - Low Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = LQVodka:1.0,
    }
    }
}
item OpenedVodka
{
    DisplayName = Bottle of Vodka (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = Vodka:1.0,
    }
    }
}
item OpenedVodkaHQ
{
    DisplayName = Bottle of Vodka - High Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = HQVodka:1.0,
    }
    }
}
item OpenedGinLQ
{
    DisplayName = Bottle of Gin - Low Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = LQGin:1.0,
    }
    }
}
item OpenedGin
{
    DisplayName = Bottle of Gin (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = Gin:1.0,
    }
    }
}
item OpenedGinHQ
{
    DisplayName = Bottle of Gin - High Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = HQGin:1.0,
    }
    }
}
item OpenedWineLQ
{
    DisplayName = Bottle of Wine - Low Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = LQWine:1.0,
    }
    }
}
item OpenedWine
{
    DisplayName = Bottle of Wine (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = Wine:1.0,
    }
    }
}
item OpenedWineHQ
{
    DisplayName = Bottle of Wine - High Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = HQWine:1.0,
    }
    }
}
item OpenedWhiteWineLQ
{
    DisplayName = Bottle of White Wine - Low Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = LQWine:1.0:0.65:0.8:0.65,
    }
    }
}
item OpenedWhiteWine
{
    DisplayName = Bottle of White Wine (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = Wine:1.0:0.65:0.8:0.65,
    }
    }
}
item OpenedWhiteWineHQ
{
    DisplayName = Bottle of White Wine - High Quality (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity	= 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = HQWine:1.0:0.65:0.8:0.65,
    }
    }
}

item SealedBeerWA
    {
        DisplayName = Bottle of Beer - Well Aged,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
    EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = DirtyAlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = WABeer:1.0,
            }
        }
    }
item OpenedBeerWA
{
    DisplayName = Bottle of Beer - Well Aged (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity    = 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = WABeer:1.0,
    }
    }
}

item SealedMeadWA
    {
        DisplayName = Bottle of Mead - Well Aged,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
    EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = DirtyAlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = WAMead:1.0,
            }
        }
    }
item OpenedMeadWA
{
    DisplayName = Bottle of Mead - Well Aged (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity    = 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = WAMead:1.0,
    }
    }
}

item SealedWhiskeyWA
    {
        DisplayName = Bottle of Whiskey - Well Aged,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
    EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = DirtyAlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = WAWhiskey:1.0,
            }
        }
    }
item OpenedWhiskeyWA
{
    DisplayName = Bottle of Whiskey - Well Aged (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity    = 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = WAWhiskey:1.0,
    }
    }
}

item SealedVodkaWA
    {
        DisplayName = Bottle of Vodka - Well Aged,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
    EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = DirtyAlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = WAVodka:1.0,
            }
        }
    }
item OpenedVodkaWA
{
    DisplayName = Bottle of Vodka - Well Aged (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity    = 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = WAVodka:1.0,
    }
    }
}

item SealedGinWA
    {
        DisplayName = Bottle of Gin - Well Aged,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
    EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CapAlcoholBottle,
        WorldStaticModel = CapAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = DirtyAlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = WAGin:1.0,
            }
        }
    }
item OpenedGinWA
{
    DisplayName = Bottle of Gin - Well Aged (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity    = 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = WAGin:1.0,
    }
    }
}

item SealedBerryWineWA
    {
        DisplayName = Bottle of Berry Wine - Well Aged,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
    EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CorkAlcoholBottle,
        WorldStaticModel = CorkAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = DirtyAlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = WABerryWine:1.0,
            }
        }
    }
item OpenedBerryWineWA
{
    DisplayName = Bottle of Berry Wine - Well Aged (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity    = 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = WABerryWine:1.0,
    }
    }
}

item SealedWhiteWineWA
    {
        DisplayName = Bottle of White Wine - Well Aged,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
    EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CorkAlcoholBottle,
        WorldStaticModel = CorkAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = DirtyAlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = WAWine:1.0:0.65:0.8:0.65,
            }
        }
    }
item OpenedWhiteWineWA
{
    DisplayName = Bottle of White Wine - Well Aged (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity    = 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
                fluid = WAWine:1.0:0.65:0.8:0.65,
    }
    }
}

item SealedRedWineWA
    {
        DisplayName = Bottle of Red Wine - Well Aged,
        DisplayCategory = Food,
        Type = Normal,
        Weight = 1.0,
        Icon = SealedAlcoholBottle, 
    EatType = Bourbon,
        FillFromDispenserSound = GetWaterFromDispenserGlass,
        FillFromLakeSound = GetWaterFromLakeBottle,
        FillFromTapSound = GetWaterFromTapGlass,
        FillFromToiletSound = GetWaterFromToilet,
        StaticModel = CorkAlcoholBottle,
        WorldStaticModel = CorkAlcoholBottle,
        Tags = Glass;GlassBottle,

        component FluidContainer
        {
            ContainerName   = DirtyAlcoholBottle,
            Opened    = false,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,

            Fluids
            {
                fluid = WAWine:1.0,
            }
        }
    }
item OpenedRedWineWA
{
    DisplayName = Bottle of Red Wine - Well Aged (Opened),
    DisplayCategory = Food,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    EatType = Bourbon,
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = DirtyAlcoholBottle,
    Opened    = true,
    capacity    = 1.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = WAWine:1.0,
    }
    }
}
item OpenedEthanolBottle
{
    DisplayName = Bottle of Ethanol,
    DisplayCategory = FluidContainer,
    Type = Normal,
    Weight = 1.0,
    Icon = GreenAlcoholBottle, 
    FillFromDispenserSound = GetWaterFromDispenserGlass,
    FillFromLakeSound = GetWaterFromLakeBottle,
    FillFromTapSound = GetWaterFromTapGlass,
    FillFromToiletSound = GetWaterFromToilet,
    StaticModel = GreenAlcoholBottle,
    WorldStaticModel = GreenAlcoholBottle,
    Tags = Glass;GlassBottle,
    component FluidContainer
    {
    ContainerName   = AlcoholBottle,
    Opened    = true,
    capacity    = 5.0,
    CustomDrinkSound = DrinkingFromBottle,
    Fluids
    {
    fluid = Ethanol:1.0,
    }
    }
}

item PortableCanningMachine
{
	DisplayName = Portable Canning Machine,
	DisplayCategory = Food,
	Type = Normal,
	Weight = 3.0,
	Icon = PortableCanningMachine,
	WorldStaticModel = PortableCanningMachine,
	Tags = HasMetal;IgnoreZombieDensity,
}

item NewTinCan
{
    DisplayName         = Tin Can (With Lid),
    DisplayCategory     = Material,
    Type                = Normal,
    Weight              = 0.2,
    Icon                = CanClosedNew,
    WorldStaticModel    = CanClosedNew,
    Tags                = IgnoreZombieDensity,
}
	
	item TinCanBox
	{
	DisplayName 		= Tin Can Box,
	DisplayCategory 	= Camping,
	Type 			= Normal,
	Weight 			= 5,
       	Icon			= Parcel_Medium_Food,
	WorldStaticModel	= TinCanBox_Ground,
	Tags 			= IgnoreZombieDensity,
	Tooltip 		= Tooltip_HunterBox,
	}
	
item CannedBeef
{
    DisplayName = Canned Beef,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.6,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 550,
    Carbohydrates = 5,
    Lipids = 35,
    Proteins = 45,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedPork
{
    DisplayName = Canned Pork,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.55,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 520,
    Carbohydrates = 5,
    Lipids = 30,
    Proteins = 40,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedMuttonChops
{
    DisplayName = Canned Mutton Chops,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.55,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 700,
    Carbohydrates = 5,
    Lipids = 30,
    Proteins = 40,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedChickenFillet
{
    DisplayName = Canned Chicken Fillet,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.55,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 900,
    Carbohydrates = 5,
    Lipids = 30,
    Proteins = 40,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedWholeChicken
{
    DisplayName = Canned Whole Chicken,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.55,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 950,
    Carbohydrates = 5,
    Lipids = 30,
    Proteins = 40,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedFishFillet
{
    DisplayName = Canned Fish Fillet,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.4,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 400,
    Carbohydrates = 5,
    Lipids = 18,
    Proteins = 37,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedBerries
{
    DisplayName = Canned Berries,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.3,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 200,
    Carbohydrates = 47,
    Lipids = 1,
    Proteins = 1,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedMushrooms
{
    DisplayName = Canned Mushrooms,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.45,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 150,
    Carbohydrates = 10,
    Lipids = 2,
    Proteins = 5,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedGroundBeef
{
    DisplayName = Canned Ground Beef,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.55,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 500,
    Carbohydrates = 5,
    Lipids = 30,
    Proteins = 40,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedSteak
{
    DisplayName = Canned Steak,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.7,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 600,
    Carbohydrates = 5,
    Lipids = 40,
    Proteins = 50,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedVenison
{
    DisplayName = Canned Venison,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 450,
    Carbohydrates = 5,
    Lipids = 20,
    Proteins = 35,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedSquirrel
{
    DisplayName = Canned Squirrel,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.4,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 400,
    Carbohydrates = 10,
    Lipids = 25,
    Proteins = 20,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedTomatoSauce
{
    DisplayName = Canned Tomato Sauce,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.3,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 250,
    Carbohydrates = 20,
    Lipids = 5,
    Proteins = 3,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedEggs
{
    DisplayName = Canned Eggs,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.3,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 300,
    Carbohydrates = 5,
    Lipids = 20,
    Proteins = 25,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedSalami
{
    DisplayName = Canned Salami,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.6,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 550,
    Carbohydrates = 5,
    Lipids = 35,
    Proteins = 40,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedSausage
{
    DisplayName = Canned Sausage,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.6,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 500,
    Carbohydrates = 5,
    Lipids = 30,
    Proteins = 35,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedSalmon
{
    DisplayName = Canned Salmon,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 450,
    Carbohydrates = 5,
    Lipids = 25,
    Proteins = 35,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedPumpkin
{
    DisplayName = Canned Pumpkin,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 300,
    Carbohydrates = 50,
    Lipids = 2,
    Proteins = 5,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedZucchini
{
    DisplayName = Canned Zucchini,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 150,
    Carbohydrates = 10,
    Lipids = 1,
    Proteins = 3,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedEggplant
{
    DisplayName = Canned Eggplant,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 180,
    Carbohydrates = 15,
    Lipids = 1,
    Proteins = 3,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedBellPeppers
{
    DisplayName = Canned Bell Peppers,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 150,
    Carbohydrates = 20,
    Lipids = 1,
    Proteins = 3,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedGarlic
{
    DisplayName = Canned Garlic,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 200,
    Carbohydrates = 30,
    Lipids = 1,
    Proteins = 5,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedOnion
{
    DisplayName = Canned Onion,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 250,
    Carbohydrates = 30,
    Lipids = 1,
    Proteins = 5,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedCabbage
{
    DisplayName = Canned Cabbage,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 350,
    Carbohydrates = 40,
    Lipids = 2,
    Proteins = 5,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedRabbit
{
    DisplayName = Canned Rabbit,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 450,
    Carbohydrates = 10,
    Lipids = 20,
    Proteins = 30,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedBread
{
    DisplayName = Canned Bread,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 400,
    Carbohydrates = 60,
    Lipids = 5,
    Proteins = 10,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedStrawberry
{
    DisplayName = Canned Strawberry,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 250,
    Carbohydrates = 50,
    Lipids = 1,
    Proteins = 3,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedPieFilling
{
    DisplayName = Canned Pie Filling,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 450,
    Carbohydrates = 70,
    Lipids = 10,
    Proteins = 5,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedShrimp
{
    DisplayName = Canned Shrimp,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 350,
    Carbohydrates = 5,
    Lipids = 15,
    Proteins = 40,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedHam
{
    DisplayName = Canned Ham,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 450,
    Carbohydrates = 5,
    Lipids = 25,
    Proteins = 35,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedSoybeans
{
    DisplayName = Canned Soybeans,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 300,
    Carbohydrates = 40,
    Lipids = 5,
    Proteins = 15,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedWatermelon
{
    DisplayName = Canned Watermelon,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 200,
    Carbohydrates = 40,
    Lipids = 1,
    Proteins = 3,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedBroccoli
{
    DisplayName = Canned Broccoli,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 250,
    Carbohydrates = 30,
    Lipids = 2,
    Proteins = 10,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedHabenero
{
    DisplayName = Canned Habenero,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 200,
    Carbohydrates = 25,
    Lipids = 8,
    Proteins = 15,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedPickles
{
    DisplayName = Canned Pickles,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanClosedNew,
    CannedFood = TRUE,
    CantEat = TRUE,
    Packaged = TRUE,
    Calories = 150,
    Carbohydrates = 20,
    Lipids = 1,
    Proteins = 3,
    StaticModel = CanClosedNew,
    WorldStaticModel = CanClosedNew,
    Tags = IgnoreZombieDensity,
    Tooltip = Tooltip_item_CanOpener,
}
item CannedBeefOpen
{
    DisplayName = Canned Beef (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.6,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 550,
    Carbohydrates = 5,
    Lipids = 35,
    Proteins = 45,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -30,
    ThirstChange = -10,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedPorkOpen
{
    DisplayName = Canned Pork (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.55,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 520,
    Carbohydrates = 5,
    Lipids = 30,
    Proteins = 40,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -30,
    ThirstChange = -10,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}
item CannedMuttonChopsOpen
{
    DisplayName = Canned Mutton Chops (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.55,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 700,
    Carbohydrates = 5,
    Lipids = 20,
    Proteins = 40,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -25,
    ThirstChange = -5,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}
item CannedChickenFilletOpen
{
    DisplayName = Canned Chicken Fillet (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.55,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 900,
    Carbohydrates = 5,
    Lipids = 30,
    Proteins = 40,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -40,
    ThirstChange = -5,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}
item CannedWholeChickenOpen
{
    DisplayName = Canned Whole Chicken (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.55,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 950,
    Carbohydrates = 5,
    Lipids = 30,
    Proteins = 40,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -45,
    ThirstChange = -5,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedFishFilletOpen
{
    DisplayName = Canned Fish Fillet (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.4,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 400,
    Carbohydrates = 5,
    Lipids = 18,
    Proteins = 37,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -30,
    ThirstChange = -10,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedBerriesOpen
{
    DisplayName = Canned Berries (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.3,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 200,
    Carbohydrates = 47,
    Lipids = 1,
    Proteins = 1,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -20,
    ThirstChange = -20,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedMushroomsOpen
{
    DisplayName = Canned Mushrooms (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.45,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 150,
    Carbohydrates = 10,
    Lipids = 2,
    Proteins = 5,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -20,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedGroundBeefOpen
{
    DisplayName = Canned Ground Beef (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.55,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 500,
    Carbohydrates = 5,
    Lipids = 30,
    Proteins = 40,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -20,
    ThirstChange = -4,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedSteakOpen
{
    DisplayName = Canned Steak (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.7,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 600,
    Carbohydrates = 5,
    Lipids = 40,
    Proteins = 50,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -30,
    ThirstChange = -10,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedVenisonOpen
{
    DisplayName = Canned Venison (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 450,
    Carbohydrates = 5,
    Lipids = 20,
    Proteins = 35,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -30,
    ThirstChange = -10,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedSquirrelOpen
{
    DisplayName = Canned Squirrel (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.4,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 400,
    Carbohydrates = 10,
    Lipids = 25,
    Proteins = 20,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -30,
    ThirstChange = -5,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedTomatoSauceOpen
{
    DisplayName = Canned Tomato Sauce (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.3,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 250,
    Carbohydrates = 20,
    Lipids = 5,
    Proteins = 3,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -24,
    ThirstChange = -10,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedEggsOpen
{
    DisplayName = Canned Eggs (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.3,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 300,
    Carbohydrates = 5,
    Lipids = 20,
    Proteins = 25,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -20,
    ThirstChange = -5,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedSalamiOpen
{
    DisplayName = Canned Salami (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.6,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 550,
    Carbohydrates = 5,
    Lipids = 35,
    Proteins = 40,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -20,
    ThirstChange = -4,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedSausageOpen
{
    DisplayName = Canned Sausage (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.6,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 500,
    Carbohydrates = 5,
    Lipids = 30,
    Proteins = 35,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -20,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedSalmonOpen
{
    DisplayName = Canned Salmon (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 450,
    Carbohydrates = 5,
    Lipids = 25,
    Proteins = 35,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -33,
    ThirstChange = -4,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedPumpkinOpen
{
    DisplayName = Canned Pumpkin (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 300,
    Carbohydrates = 50,
    Lipids = 2,
    Proteins = 5,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -40,
    ThirstChange = -8,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedZucchiniOpen
{
    DisplayName = Canned Zucchini (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 150,
    Carbohydrates = 10,
    Lipids = 1,
    Proteins = 3,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -20,
    ThirstChange = -4,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedEggplantOpen
{
    DisplayName = Canned Eggplant (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 180,
    Carbohydrates = 15,
    Lipids = 1,
    Proteins = 3,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -25,
    ThirstChange = -4,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedBellPeppersOpen
{
    DisplayName = Canned Bell Peppers (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 150,
    Carbohydrates = 20,
    Lipids = 1,
    Proteins = 3,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -25,
    ThirstChange = -5,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedGarlicOpen
{
    DisplayName = Canned Garlic (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 200,
    Carbohydrates = 30,
    Lipids = 1,
    Proteins = 5,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -15,
    ThirstChange = 5,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedOnionOpen
{
    DisplayName = Canned Onion (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 250,
    Carbohydrates = 30,
    Lipids = 1,
    Proteins = 5,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -20,
    ThirstChange = 5,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedCabbageOpen
{
    DisplayName = Canned Cabbage (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 350,
    Carbohydrates = 40,
    Lipids = 2,
    Proteins = 5,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -20,
    ThirstChange = -4,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedRabbitOpen
{
    DisplayName = Canned Rabbit (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.8,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 450,
    Carbohydrates = 10,
    Lipids = 20,
    Proteins = 30,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -30,
    ThirstChange = -4,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedBreadOpen
{
    DisplayName = Canned Bread (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 400,
    Carbohydrates = 60,
    Lipids = 5,
    Proteins = 10,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -30,
    ThirstChange = -5,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedStrawberryOpen
{
    DisplayName = Canned Strawberry (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 250,
    Carbohydrates = 50,
    Lipids = 1,
    Proteins = 3,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -20,
    ThirstChange = -4,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedPieFillingOpen
{
    DisplayName = Canned Pie Filling (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 450,
    Carbohydrates = 70,
    Lipids = 10,
    Proteins = 5,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -25,
    ThirstChange = -10,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedShrimpOpen
{
    DisplayName = Canned Shrimp (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 350,
    Carbohydrates = 5,
    Lipids = 15,
    Proteins = 40,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -30,
    ThirstChange = -5,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedHamOpen
{
    DisplayName = Canned Ham (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 450,
    Carbohydrates = 5,
    Lipids = 25,
    Proteins = 35,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Beef,
    HungerChange = -50,
    ThirstChange = -5,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}
item CannedSoybeansOpen
{
    DisplayName = Canned Soybeans (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 200,
    Carbohydrates = 40,
    Lipids = 5,
    Proteins = 15,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    IsCookable = TRUE,
    MinutesToCook = 10,
    MinutesToBurn = 30,
    CookingSound = BoilingFood,
    GoodHot = true,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -20,
    ThirstChange = -5,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedWatermelonOpen
{
    DisplayName = Canned Watermelon (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 200,
    Carbohydrates = 40,
    Lipids = 1,
    Proteins = 3,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -30,
    ThirstChange = -15,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedBroccoliOpen
{
    DisplayName = Canned Broccoli (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 250,
    Carbohydrates = 30,
    Lipids = 2,
    Proteins = 10,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -24,
    ThirstChange = -4,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedHabeneroOpen
{
    DisplayName = Canned Habenero (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 200,
    Carbohydrates = 25,
    Lipids = 8,
    Proteins = 15,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -20,
    ThirstChange = -4,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}

item CannedPicklesOpen
{
    DisplayName = Canned Pickles (Opened),
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 150,
    Carbohydrates = 20,
    Lipids = 1,
    Proteins = 3,
    StaticModel = CanOpenedNew,
    WorldStaticModel = CanOpenedNew,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -15,
    ThirstChange = -4,
    ReplaceOnUse = TinCanEmpty,
    DaysFresh = 2,
    DaysTotallyRotten = 4,
}
item WhiteGrapes
{
DisplayName = White Grapes,
DisplayCategory = Food,
Type = Food,
Weight = 0.2,
Icon = WhiteGrapes,
FoodType = Fruits,
DaysFresh = 6,
DaysTotallyRotten = 9,
HungerChange = -12,
ThirstChange = -10,
Calories = 85,
Carbohydrates = 15.78,
Lipids = 0.32,
Proteins = 0.58,
CustomEatSound = EatingFruit,
StaticModel = WhiteGrapes,
WorldStaticModel = WhiteGrapes,
}

    item ABHPonderPadLaptop
    {
        DisplayCategory = Electronics,
        Weight	=	5.0,
	Type	= Drainable,
	UseDelta = 0.05,
        DisplayName	=   ABH Ponder-Pad Laptop,
        Icon	=	ABHPonderPadLaptop,
	Tooltip = Tooltip_ABHPonderPadLaptop,
        WorldStaticModel = ABHPonderPadLaptop,
	Tags = HasMetal;ABHPonderPadLaptop_Console;SupportCorps_ABHPonderpadLaptop,
    }
	
    item ABHPrinter
    {
        DisplayCategory = Electronics,
        Weight	=	7.0,
	Type	= Drainable,
	UseDelta = 0.05,
        DisplayName	=   ABH Inkjet Printer,
        Icon	=	ABHPrinter,
	Tooltip = Tooltip_ABHPrinter,
        WorldStaticModel = ABHPrinter,
    }

	item ABHPonderPadLaptopMUSIC
	{
		DisplayName = ABH Ponder-Pad Laptop (Music Player),
		DisplayCategory = Electronics,
		Type = Radio,
		Weight = 6.0,
		Icon = ABHPonderPadLaptop,
		AttachmentType = Walkie,
		BaseVolumeRange = 8,
		DisappearOnUse = FALSE,
		IsHighTier = TRUE,
		IsPortable = TRUE,
		IsTelevision = FALSE,
		MaxChannel = 500000,
		MicRange = 0,
		MinChannel = 1,
		NoTransmit = TRUE,
		Tooltip = Tooltip_ABHPonderPadLaptopMUSIC,
		TransmitRange = 50000,
		TwoWay = FALSE,
		UseDelta = 0.08, 
		UseWhileEquipped = FALSE,
		UsesBattery = TRUE,
		WorldStaticModel = ABHPonderPadLaptopMUSIC,
		StaticModel = ABHPonderPadLaptopMUSIC,
	}

	item ABHPonderPadLaptopNotes
	{
		DisplayName = ABH Ponder-Pad Laptop (Wordoffice),
		DisplayCategory = Electronics,
		Type = Literature,
		Weight = 5.0,
		Icon = ABHPonderPadLaptop,
		CanBeWrite = true,
		PageToWrite = 1000,
		StaticModel = ABHPonderPadLaptop,
		WorldStaticModel = ABHPonderPadLaptop,
		ReadType = newspaper,
	}
		
	item ABHCDDrive
	{
		DisplayName = ABH CD-Drive,
		DisplayCategory = Electronics,
		Type = Normal,
		Weight = 1.0,
		Icon = ABHCDDrive,
		WorldStaticModel = ABHCDDrive,
		Tags = HasMetal;MiscElectronic,
	}

    item ABHPonderPadLaptopBRICKED1
    {
        DisplayCategory = Electronics,
        Weight	=	5.0,
	Type	= Normal,
        DisplayName	=   ABH Ponder-Pad Laptop (Ruined Motherboard),
        Icon	=	ABHPonderPadLaptop,
	Tooltip = Tooltip_ABHPonderPadLaptopBRICKED1,
        WorldStaticModel = ABHPonderPadLaptop,
	Tags = HasMetal;ABHPonderPadLaptop_Console,
    }

    item ABHPonderPadLaptopBRICKED2
    {
        DisplayCategory = Electronics,
        Weight	=	5.0,
	Type	= Normal,
        DisplayName	=   ABH Ponder-Pad Laptop (Virus Infested),
        Icon	=	ABHPonderPadLaptop,
	Tooltip = Tooltip_ABHPonderPadLaptopBRICKED2,
        WorldStaticModel = ABHPonderPadLaptop,
	Tags = HasMetal;ABHPonderPadLaptop_Console,
    }

    item ABHPonderPadLaptopBRICKED3
    {
        DisplayCategory = Electronics,
        Weight	=	5.0,
	Type	= Normal,
        DisplayName	=   ABH Ponder-Pad Laptop (Corrupted OS),
        Icon	=	ABHPonderPadLaptop,
	Tooltip = Tooltip_ABHPonderPadLaptopBRICKED3,
        WorldStaticModel = ABHPonderPadLaptop,
	Tags = HasMetal;ABHPonderPadLaptop_Console,
    }

    item ABHPonderPadLaptopSealed
    {
        DisplayCategory = Electronics,
        Weight	=	5.0,
	Type	= Normal,
        DisplayName	= ABH Ponder-Pad Laptop Box,
        Icon	=	ABHPonderPadLaptop,
	Tooltip = Tooltip_ABHPonderPadLaptopBRICKED3,
        WorldStaticModel = ABHPonderPadLaptop,
	Tags = HasMetal;ABHPonderPadLaptop_Console,
    }
					
	item FloppyDiskZimCity
	{
		DisplayName = Floppy Disk - Zim-City,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk,
		Tags = HasMetal;MiscElectronic,
	}
	
	item FloppyDiskCivilize
	{
		DisplayName = Floppy Disk - Civilize,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk,
		Tags = HasMetal;MiscElectronic,
	}
	
	item FloppyDiskVulpenstein
	{
		DisplayName = Floppy Disk - Vulpenstein,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk,
		Tags = HasMetal;MiscElectronic,
	}
	
	item FloppyDiskWizardryWarsVI
	{
		DisplayName = Floppy Disk - Wizardry Wars VI,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk,
		Tags = HasMetal;MiscElectronic,
	}
			
	item FloppyDiskDarkQueenofSrynn
	{
		DisplayName = Floppy Disk - Dark Queen of Srynn,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk,
		Tags = HasMetal;MiscElectronic,
	}
				
	item FloppyDiskBetris
	{
		DisplayName = Floppy Disk - Betris,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk,
		Tags = HasMetal;MiscElectronic,
	}
	
	item FloppyDiskPOA
	{
		DisplayName = Floppy Disk - Prince of Arabia,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk,
		Tags = HasMetal;MiscElectronic,
	}
	
	item FloppyDiskSoduku
	{
		DisplayName = Floppy Disk - Soduku,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk,
		Tags = HasMetal;MiscElectronic,
	}
	
	item FloppyDiskSolitaire
	{
		DisplayName = Floppy Disk - Solitaire,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk,
		Tags = HasMetal;MiscElectronic,
	}
				
	item FloppyDiskDOOMBeta
	{
		DisplayName =  Unlabeled Floppy Disk (DOOM Beta),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk,
		Tags = HasMetal;MiscElectronic,
	}
					
	item FloppyDiskMamaClara
	{
		DisplayName =  Floppy Disk - Mama Clara's Recipebook,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}
				
	item FloppyDiskEngineersCookbook
	{
		DisplayName =  Floppy Disk - Engineer's Cookbook,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}
				
	item FloppyDiskKYFarmingAlmanac
	{
		DisplayName =  Floppy Disk - KY Farming Almanac,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}
				
	item FloppyDiskKYNatureSurvival
	{
		DisplayName =  Floppy Disk - KY Nature Survival,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}
				
	item FloppyDiskGlassmaker
	{
		DisplayName =  Floppy Disk - Glassmaker Magazines,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}
				
	item FloppyDiskDCMechanicSeries
	{
		DisplayName =  Floppy Disk - Dash & Chevalier Mechanic Series,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}
				
	item FloppyDiskWeldingDummies
	{
		DisplayName =  Floppy Disk - Welding for Dummies,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskGaming,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}
				
	item FloppyDiskCarpentryPublisher
	{
		DisplayName =  Floppy Disk - Carpentry Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}
				
	item FloppyDiskCarvingPublisher
	{
		DisplayName =  Floppy Disk - Carving Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}
				
	item FloppyDiskCookingPublisher
	{
		DisplayName =  Floppy Disk - Cooking Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																								
	item FloppyDiskElectricalPublisher
	{
		DisplayName =  Floppy Disk - Electrical Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																								
	item FloppyDiskFarmingPublisher
	{
		DisplayName =  Floppy Disk - Farming Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																								
	item FloppyDiskMedicalPublisher
	{
		DisplayName =  Floppy Disk - Medical Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																								
	item FloppyDiskFishingPublisher
	{
		DisplayName =  Floppy Disk - Fishing Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																								
	item FloppyDiskKnappingPublisher
	{
		DisplayName =  Floppy Disk - Knapping Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																								
	item FloppyDiskForagingPublisher
	{
		DisplayName =  Floppy Disk - Foraging Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																								
	item FloppyDiskGlassmakingPublisher
	{
		DisplayName =  Floppy Disk - Glassmaking Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																								
	item FloppyDiskMasonryPublisher
	{
		DisplayName =  Floppy Disk - Masonry Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																				
	item FloppyDiskMechanicsPublisher
	{
		DisplayName =  Floppy Disk - Mechanics Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																				
	item FloppyDiskWeldingPublisher
	{
		DisplayName =  Floppy Disk - Welding Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																				
	item FloppyDiskMetalworkingPublisher
	{
		DisplayName =  Floppy Disk - Metalworking Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																							
	item FloppyDiskPotteryPublisher
	{
		DisplayName =  Floppy Disk - Pottery Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																							
	item FloppyDiskTailoringPublisher
	{
		DisplayName =  Floppy Disk - Tailoring Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																							
	item FloppyDiskTrappingPublisher
	{
		DisplayName =  Floppy Disk - Trapping Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																									
	item FloppyDiskAimingPublisher
	{
		DisplayName =  Floppy Disk - Aiming Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																									
	item FloppyDiskReloadingPublisher
	{
		DisplayName =  Floppy Disk - Reloading Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																									
	item FloppyDiskHusbandryPublisher
	{
		DisplayName =  Floppy Disk - Husbandry Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																									
	item FloppyDiskButcheringPublisher
	{
		DisplayName =  Floppy Disk - Butchering Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																											
	item FloppyDiskTrackingPublisher
	{
		DisplayName =  Floppy Disk - Tracking Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																											
	item FloppyDiskLongBladePublisher
	{
		DisplayName =  Floppy Disk - LongBlade Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																											
	item FloppyDiskMaintenancePublisher
	{
		DisplayName =  Floppy Disk - Maintenance Book Set (Publisher's Version),
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskSet,
		WorldStaticModel = FloppyDisk2,
		Tags = HasMetal;MiscElectronic,
	}																										
	item FloppyDiskKnoxMaps
	{
		DisplayName =  Floppy Disk - Knox Maps,
		DisplayCategory = Entertainment,
		Type = Normal,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}																													
	item FloppyDiskKnoxTimesCrossword
	{
		DisplayName =  Floppy Disk - Knox Times Crosswords,
		DisplayCategory = Entertainment,
		Type	= Drainable,
		UseDelta = 0.2,
		Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}																											
	item FloppyDiskMarvellousComicBook
	{
		DisplayName =  Floppy Disk - Marvellous Comicbook Collection,
		DisplayCategory = Entertainment,
		Type	= Drainable,
		UseDelta = 0.2,
		Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}																											
	item FloppyDiskHottieZCollection
	{
		DisplayName =  Floppy Disk - HottieZ Collection,
		DisplayCategory = Entertainment,
		Type	= Drainable,
		UseDelta = 0.2,
		Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}																											
	item FloppyDiskHunkZCollection
	{
		DisplayName =  Floppy Disk - HunkZ Collection,
		DisplayCategory = Entertainment,
		Type	= Drainable,
		UseDelta = 0.2,
		Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}																											
	item FloppyDiskMagazineCollection
	{
		DisplayName =  Floppy Disk - 1987-1992 Magazine Collection,
		DisplayCategory = Entertainment,
		Type	= Drainable,
		UseDelta = 0.2,
		Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}																											
	item FloppyDiskTVMagazineCollection
	{
		DisplayName =  Floppy Disk - 1987-1992 TV Magazine Collection,
		DisplayCategory = Entertainment,
		Type	= Drainable,
		UseDelta = 0.2,
		Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}																																								
	item FloppyDiskAdventureNonFictionCollection
	{
		DisplayName =  Floppy Disk - Adventure Non-Fiction Books Collection,
		DisplayCategory = Entertainment,
		Type	= Drainable,
		UseDelta = 0.2,
		Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}																																								
	item FloppyDiskArtCollection
	{
		DisplayName =  Floppy Disk - Art Books Collection,
		DisplayCategory = Entertainment,
		Type	= Drainable,
		UseDelta = 0.2,
		Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}																																								
	item FloppyDiskBaseballCollection
	{
		DisplayName =  Floppy Disk - Baseball Books Collection,
		DisplayCategory = Entertainment,
		Type	= Drainable,
		UseDelta = 0.2,
		Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}																																								
	item FloppyDiskBible
	{
		DisplayName =  Floppy Disk - Bible Collection,
		DisplayCategory = Entertainment,
		Type	= Drainable,
		UseDelta = 0.2,
		Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}																																								
	item FloppyDiskBiography
	{
		DisplayName =  Floppy Disk - Biography Books Collection,
		DisplayCategory = Entertainment,
		Type	= Drainable,
		UseDelta = 0.2,
		Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}																																								
	item FloppyDiskBusiness
	{
		DisplayName =  Floppy Disk - Business Books Collection,
		DisplayCategory = Entertainment,
		Type	= Drainable,
		UseDelta = 0.2,
		Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}																																								
	item FloppyDiskChilds
	{
		DisplayName =  Floppy Disk - Childs Books Collection,
		DisplayCategory = Entertainment,
		Type	= Drainable,
		UseDelta = 0.2,
		Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
		Icon = FloppyDiskBooks,
		WorldStaticModel = FloppyDisk3,
		Tags = HasMetal;MiscElectronic,
	}

item FloppyDiskCinema
{
    DisplayName =  Floppy Disk - Cinema Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskClassic
{
    DisplayName =  Floppy Disk - Classic Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskClassicFiction
{
    DisplayName =  Floppy Disk - Classic Fiction Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskClassicNonfiction
{
    DisplayName =  Floppy Disk - Classic Nonfiction Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskComputer
{
    DisplayName =  Floppy Disk - Computer Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskCrimeFiction
{
    DisplayName =  Floppy Disk - Crime Fiction Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskFantasy
{
    DisplayName =  Floppy Disk - Fantasy Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskFarming
{
    DisplayName =  Floppy Disk - Farming Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskFashion
{
    DisplayName =  Floppy Disk - Fashion Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskFiction
{
    DisplayName =  Floppy Disk - Fiction Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskGeneralNonFiction
{
    DisplayName =  Floppy Disk - General Non-Fiction Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskGeneralReference
{
    DisplayName =  Floppy Disk - General Reference Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskGolf
{
    DisplayName =  Floppy Disk - Golf Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskHistory
{
    DisplayName =  Floppy Disk - History Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskHorror
{
    DisplayName =  Floppy Disk - Horror Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskLegal
{
    DisplayName =  Floppy Disk - Legal Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskLiteraryFiction
{
    DisplayName =  Floppy Disk - Literary Fiction Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskMedical
{
    DisplayName =  Floppy Disk - Medical Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskMilitary
{
    DisplayName =  Floppy Disk - Military Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskMilitaryHistory
{
    DisplayName =  Floppy Disk - Military History Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskMusic
{
    DisplayName =  Floppy Disk - Music Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskNature
{
    DisplayName =  Floppy Disk - Nature Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
		Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskOccult
{
    DisplayName =  Floppy Disk - Occult Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskPhilosophy
{
    DisplayName =  Floppy Disk - Philosophy Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskPolicing
{
    DisplayName =  Floppy Disk - Policing Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskPolitics
{
    DisplayName =  Floppy Disk - Politics Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskQuackery
{
    DisplayName =  Floppy Disk - Quackery Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskReligion
{
    DisplayName =  Floppy Disk - Religion Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskRich
{
    DisplayName =  Floppy Disk - Rich Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskRomance
{
    DisplayName =  Floppy Disk - Romance Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskSadNonFiction
{
    DisplayName =  Floppy Disk - Sad Non-Fiction Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskSchoolTextbook
{
    DisplayName =  Floppy Disk - School Textbook Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskScience
{
    DisplayName =  Floppy Disk - Science Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskSciFi
{
    DisplayName =  Floppy Disk - Sci-Fi Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskSports
{
    DisplayName =  Floppy Disk - Sports Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskThriller
{
    DisplayName =  Floppy Disk - Thriller Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskTravel
{
    DisplayName =  Floppy Disk - Travel Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}

item FloppyDiskWestern
{
    DisplayName =  Floppy Disk - Western Books Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}																																										
item FloppyDiskNewMagazines
{
    DisplayName =  Floppy Disk - New Magazines Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}																					
item FloppyDiskPaperback
{
    DisplayName =  Floppy Disk - Paperback Collection,
    DisplayCategory = Entertainment,
    Type	= Drainable,
    UseDelta = 0.2,
    Tooltip = Tooltip_LimitedFloppyDisk3,
    Weight = 0.05,
    Icon = FloppyDiskBooks,
    WorldStaticModel = FloppyDisk3,
    Tags = HasMetal;MiscElectronic,
}	
																
item BoxOfPapers
{
    DisplayName         = Box of Papers,
    DisplayCategory     = Material,
    Type                = Normal,
    Weight              = 8,
    Icon                = Parcel_Medium_Food,
    WorldStaticModel    = BoxOfPapers,
    Tags                = IgnoreZombieDensity,
}

item LaptopCharger
{
    DisplayName         = Laptop Charger,
    DisplayCategory     = Electronics,
    Type                = Normal,
    Weight              = 1,
    Icon                = LaptopCharger,
    WorldStaticModel    = LaptopCharger,
    Tags                = IgnoreZombieDensity,
}

item ABHMotherboard
{
    DisplayName         = ABH A-12 Motherboard,
    DisplayCategory     = Electronics,
    Type                = Normal,
    Weight              = 1,
    Icon                = Motherboard,
    WorldStaticModel    = Motherboard,
    Tags                = IgnoreZombieDensity,
}

item InkCartridge
{
    DisplayName         = Ink Cartridge,
    DisplayCategory     = Material,
    Type                = Drainable,
    UseDelta 		= 0.01,
    Weight              = 1.3,
    Icon                = InkCartridge,
    WorldStaticModel    = InkCartridge,
    Tags                = IgnoreZombieDensity,
}

item BatteryCharger
{
    DisplayName         = Battery Plug-in Charger,
    DisplayCategory     = Material,
    Type                = Drainable,
    UseDelta 		= 0.01,
    Weight              = 1.3,
    Icon                = BatteryCharger,
    WorldStaticModel    = BatteryCharger,
    Tags                = IgnoreZombieDensity,
	Tags = HasMetal;SupportCorps_BatteryCharger,
}

item FloppyDiskBinder
{
    DisplayName         = Floppy Disk Binder,
    DisplayCategory = Container,
    Type = Container,
    Weight              = 1.0,
    Icon                = FloppyDiskBinder,
	Capacity = 10,
	CloseSound = CloseBulkyProtectiveContainer,
	OpenSound = OpenBulkyProtectiveContainer,
	PutInSound = StoreItemBulkyProtectiveContainer,
	WeightReduction = 50,
    WorldStaticModel    = FloppyDiskBinder,
    Tags                = IgnoreZombieDensity,
}

	item BeehiveApiary
	{
	DisplayName = Beehive Apiary,
	DisplayCategory = Gardening,
	Weight = 15,
	Type = Normal,
	Icon = BeeHiveApiary,
	WorldStaticModel = BeehiveApiary,
        Tags = isSeed,
	}		

	item BeehiveFrame
	{
	DisplayName = Beehive Frame,
	DisplayCategory = Gardening,
	Weight = 5,
	Type = Normal,
	Icon = BeeHiveFrame,
	WorldStaticModel = BeehiveFrame,
	}	

	item BeehiveCrate
	{
	DisplayName = Beehive Crate (Empty),
	DisplayCategory = Gardening,
	Weight = 2.5,
	Type = Normal,
	Icon = BeeHiveCrate,
	WorldStaticModel = BeehiveCrate,
	}		

	item BeehiveCrate2
	{
	DisplayName = Beehive Crate (Colony),
	DisplayCategory = Gardening,
	Weight = 2.5,
	Type = Normal,
	Icon = BeehiveCrate,
	WorldStaticModel = BeehiveCrate,
	}		

	item BeekeepersManual
	{
		DisplayName = Beekeeper's Manual,
	    DisplayCategory = Gardening,
		Weight = 0.1,
		Type = Literature,
        TeachedRecipes = Honeymaking Season,
		Icon = BeekeepersManual,
        StaticModel = BeekeepersManual_Ground,
        WorldStaticModel = BeekeepersManual_Ground,
        ReadType = photo,
        Tags = FastRead,
	}

	item BeekeepersKit
	{
	DisplayName = BeekeepersKit,
	DisplayCategory = Gardening,
	Weight = 0.1,
	Type = Normal,
        TeachedRecipes = Honeymaking Season,
	Icon = Parcel_Medium_Food,
        WorldStaticModel = BeekeepersKit_Ground,
	}

    item HoneyCombUnprocessed
    {
        DisplayName = Honeycomb - Unprocessed,
        DisplayCategory = Food,
        Type = Food,
        Icon = HoneyCombUnprocessed,
        Weight = 0.1,
        WorldStaticModel = HoneyCombUnprocessed,
	CantEat = TRUE,
	Tooltip = Tooltip_HoneyComb,
    }	

item GoldIngot
{
    DisplayName         = Gold Ingot,
    DisplayCategory     = Material,
    Type                = Normal,
    Weight              = 1.5,
    Icon                = GoldIngot,
    WorldStaticModel    = GoldIngot,
    Tags                = IgnoreZombieDensity,
}

item GoldCoin
{
    DisplayName         = Gold Coin,
    DisplayCategory     = Material,
    Type                = Normal,
    Weight              = 0.15,
    Icon                = GoldCoin,
    WorldStaticModel    = GoldCoin,
    Tags                = IgnoreZombieDensity,
}

item SilverIngot
{
    DisplayName         = Silver Ingot,
    DisplayCategory     = Material,
    Type                = Normal,
    Weight              = 0.8,
    Icon                = SilverIngot,
    WorldStaticModel    = SilverIngot,
    Tags                = IgnoreZombieDensity,
}

item SilverCoin
{
    DisplayName         = Silver Coin,
    DisplayCategory     = Material,
    Type                = Normal,
    Weight              = 0.08,
    Icon                = SilverCoin,
    WorldStaticModel    = SilverCoin,
    Tags                = IgnoreZombieDensity,
}

item CoinMold
{
    DisplayName         = Coin Mold,
    DisplayCategory     = Material,
    Type                = Normal,
    Weight              = 3,
    Icon                = CoinMold,
    WorldStaticModel    = CoinMold,
    Tags                = IgnoreZombieDensity,
}

item MessKitMini
{
    DisplayName         = Personal Mess Kit,
    DisplayCategory     = Food,
    Type                = Normal,
    Weight              = 0.65,
    Icon                = Parcel_Medium_Food,
    WorldStaticModel    = MessKitMini,
    Tags                = IgnoreZombieDensity,
}

item ChocChipBag
{
    DisplayName         = Bag of Chocolate Chips,
    DisplayCategory     = Food,
    Type                = Normal,
    Weight              = 0.2,
    Icon                = ChocChipBag,
    WorldStaticModel    = ChocChipBag,
    Tags                = IgnoreZombieDensity,
}
item FoodBucketEmpty
{
	DisplayName = Empty Food Bucket,
        DisplayCategory = WaterContainer,
        Type = Normal,
        Weight = 1,
        Icon = FoodBucket,
        StaticModel = FoodBucketEmpty,
	WorldStaticModel = FoodBucketEmpty,
	FillFromDispenserSound = GetWaterFromDispenserGlass,
	FillFromLakeSound = GetWaterFromLakeBottle,
	FillFromTapSound = GetWaterFromTapGlass,
	FillFromToiletSound = GetWaterFromToilet,
	Tags = Glass,

        component FluidContainer
        {
            ContainerName   = FoodBucket,
            capacity        = 10.0,
            CustomDrinkSound = DrinkingFromBottle,
        }
}
item FoodBucketPreservatives
{
    DisplayName         = Bucket of Food Preservatives,
    DisplayCategory     = Food,
    Type                = Drainable,
    UseDelta		= 0.1,
    Weight              = 6,
    Icon                = FoodBucket,
    WorldStaticModel    = FoodBucketEmpty,
    Tags                = IgnoreZombieDensity,
}

item DyeBucket
{
    DisplayName         = Bucket of Fabric Dyeing Chemical,
    DisplayCategory     = Material,
    Type                = Drainable,
    UseDelta		= 0.05,
    Weight              = 0.25,
    Icon                = FoodBucket,
    WorldStaticModel    = FoodBucketEmpty,
    Tags                = IgnoreZombieDensity,
}

item FoodBucketRice
{
    DisplayName         = Food Bucket of Rice,
    DisplayCategory     = Food,
    Type                = Normal,
    Weight              = 5,
    Icon                = FoodBucket,
    WorldStaticModel    = FoodBucketRice,
    Tags                = IgnoreZombieDensity,
}

item FoodBucketPasta
{
    DisplayName         = Food Bucket of Pasta,
    DisplayCategory     = Food,
    Type                = Normal,
    Weight              = 3,
    Icon                = FoodBucket,
    WorldStaticModel    = FoodBucketPasta,
    Tags                = IgnoreZombieDensity,
}

item FoodBucketMashedPotato
{
    DisplayName         = Food Bucket of Mashed Potato,
    DisplayCategory     = Food,
    Type                = Normal,
    Weight              = 3,
    Icon                = FoodBucket,
    WorldStaticModel    = FoodBucketMashedPotato,
    Tags                = IgnoreZombieDensity,
}

item FoodBucketChickenBatter
{
    DisplayName         = Food Bucket of Spiffo Chicken Batter,
    DisplayCategory     = Food,
    Type                = Drainable,
    UseDelta		= 0.05,
    Weight              = 4,
    Icon                = FoodBucket,
    WorldStaticModel    = FoodBucketChickenBatter,
    Tags                = IgnoreZombieDensity,
}

item FoodBucketAnimalFeedCORP
{
    DisplayName         = Food Bucket of Animal Feed,
    DisplayCategory     = Food,
    Type                = Normal,
    Weight              = 3,
    Icon                = FoodBucket,
    WorldStaticModel    = FoodBucketAnimalFeed,
    Tags                = IgnoreZombieDensity,
}

item FoodBucketBarley
{
    DisplayName         = Food Bucket of Barley,
    DisplayCategory     = Food,
    Type                = Normal,
    Weight              = 0.5,
    Icon                = FoodBucket,
    WorldStaticModel    = FoodBucketBarley,
    Tags                = IgnoreZombieDensity,
}

item MiniFurnace
{
    DisplayName         = Mini Smelting Furnace,
    DisplayCategory     = Tool,
    Type                = Normal,
    Weight              = 15.0,
    Icon                = MiniFurnace,
    WorldStaticModel    = MiniFurnace,
    Tags                = IgnoreZombieDensity,
}
	
	item MashedPotato
	{
		DisplayName = Mashed Potato,
		DisplayCategory = Food,
		EatType = eatBox,
		Type = Food,
		Weight = 0.25,
		Icon = MashedPotato,
		Packaged = TRUE,
		HungerChange = -15,
		Calories = 300,
		Carbohydrates = 40,
		Lipids = 8,
		Proteins = 4,
		WorldStaticModel = MashedPotato,
	}

item HoneyJar
{
    DisplayName = Honey Jar,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = CanOpenedNew,
    CannedFood = TRUE,
    Packaged = TRUE,
    Calories = 200,
    Carbohydrates = 40,
    Lipids = 1,
    Proteins = 3,
    StaticModel = HoneyJar,
    WorldStaticModel = HoneyJar,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -30,
    ThirstChange = -15,
    ReplaceOnUse = EmptyJar,
}

	item VikingAxe
	{
		DisplayName = Viking Axe,
		DisplayCategory = ToolWeapon,
		Type = Weapon,
		Weight = 3,
		Icon = VikingAxe,
		AttachmentType = BigWeapon,
		BaseSpeed = 1,
		BreakSound = AxeBreak,
		Categories = Axe,
		CritDmgMultiplier = 10,
		CriticalChance = 30,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 35,
		DoorHitSound = AxeHit,
		DropSound = AxeDrop,
		HitAngleMod = -30,
		HitFloorSound = AxeHit,
		HitSound = AxeHit,
		IdleAnim = Idle_Weapon2,
		KnockBackOnNoDeath = TRUE,
		KnockdownMod = 2,
		MaxDamage = 4,
		MaxHitCount = 2,
		MaxRange = 1.5,
		MetalValue = 120,
		MinAngle = 0.72,
		MinDamage = 0.8,
		MinRange = 0.61,
		MinimumSwingTime = 3.0,
		PushBackMod = 0.3,
		RunAnim = Run_Weapon2,
		SplatBloodOnNoDeath = TRUE,
		SplatNumber = 3,
		SplatSize = 5,
		SubCategory = Swinging,
		SwingAmountBeforeImpact = 0.002,
		SwingAnim = Bat,
		SwingSound = AxeSwing,
		SwingTime = 3.0,
		TreeDamage = 35,
		TwoHandWeapon = TRUE,
		WeaponLength = 0.38,
		WeaponSprite = SupportCorps.VikingAxe,
		Tags = ChopTree;CutPlant;RemoveBarricade;Sharpenable;KillAnimal;RepairWithTape;RepairWithGlue;SmeltableIronMedium,
        	Sharpness = 1.8,
		StaticModel = VikingAxe,
		WorldStaticModel = VikingAxe,
	}

	item BattleAxe
	{
		DisplayName = Battle Axe,
		DisplayCategory = ToolWeapon,
		Type = Weapon,
		Weight = 3,
		Icon = BattleAxe,
		AttachmentType = BigWeapon,
		BaseSpeed = 1,
		BreakSound = AxeBreak,
		Categories = Axe,
		CritDmgMultiplier = 10,
		CriticalChance = 30,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 35,
		DoorHitSound = AxeHit,
		DropSound = AxeDrop,
		HitAngleMod = -30,
		HitFloorSound = AxeHit,
		HitSound = AxeHit,
		IdleAnim = Idle_Weapon2,
		KnockBackOnNoDeath = TRUE,
		KnockdownMod = 2,
		MaxDamage = 4,
		MaxHitCount = 2,
		MaxRange = 1.5,
		MetalValue = 120,
		MinAngle = 0.72,
		MinDamage = 0.8,
		MinRange = 0.61,
		MinimumSwingTime = 3.0,
		PushBackMod = 0.3,
		RunAnim = Run_Weapon2,
		SplatBloodOnNoDeath = TRUE,
		SplatNumber = 3,
		SplatSize = 5,
		SubCategory = Swinging,
		SwingAmountBeforeImpact = 0.002,
		SwingAnim = Bat,
		SwingSound = AxeSwing,
		SwingTime = 3.0,
		TreeDamage = 35,
		TwoHandWeapon = TRUE,
		WeaponLength = 0.38,
		WeaponSprite = SupportCorps.BattleAxe,
		Tags = ChopTree;CutPlant;RemoveBarricade;Sharpenable;KillAnimal;RepairWithTape;RepairWithGlue;SmeltableIronMedium,
        	Sharpness = 1.8,
		StaticModel = BattleAxe,
		WorldStaticModel = BattleAxe,
	}

	item Halberd
	{
		DisplayName = Halberd,
		DisplayCategory = ToolWeapon,
		Type = Weapon,
		Weight = 3,
		Icon = Halberd,
		AttachmentType = BigWeapon,
		BaseSpeed = 1,
		BreakSound = AxeBreak,
		Categories = Axe,
		CritDmgMultiplier = 10,
		CriticalChance = 30,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 35,
		DoorHitSound = AxeHit,
		DropSound = AxeDrop,
		HitAngleMod = -30,
		HitFloorSound = AxeHit,
		HitSound = AxeHit,
		IdleAnim = Idle_Weapon2,
		KnockBackOnNoDeath = TRUE,
		KnockdownMod = 2,
		MaxDamage = 4,
		MaxHitCount = 2,
		MaxRange = 1.5,
		MetalValue = 120,
		MinAngle = 0.72,
		MinDamage = 0.8,
		MinRange = 0.61,
		MinimumSwingTime = 3.0,
		PushBackMod = 0.3,
		RunAnim = Run_Weapon2,
		SplatBloodOnNoDeath = TRUE,
		SplatNumber = 3,
		SplatSize = 5,
		SubCategory = Swinging,
		SwingAmountBeforeImpact = 0.002,
		SwingAnim = Bat,
		SwingSound = AxeSwing,
		SwingTime = 3.0,
		TreeDamage = 35,
		TwoHandWeapon = TRUE,
		WeaponLength = 0.38,
		WeaponSprite = SupportCorps.Halberd,
		Tags = ChopTree;CutPlant;RemoveBarricade;Sharpenable;KillAnimal;RepairWithTape;RepairWithGlue;SmeltableIronMedium,
        	Sharpness = 1.8,
		StaticModel = Halberd,
		WorldStaticModel = Halberd,
	}
	
	item MedievalMace
	{
		DisplayName = Medieval Mace,
		DisplayCategory = ToolWeapon,
		Type = Weapon,
		Weight = 1.5,
		Icon = MedievalMace,
		AttachmentType = Hammer,
		BaseSpeed = 1,
		BreakSound = HammerBreak,
		Categories = SmallBlunt,
		CritDmgMultiplier = 5,
		CriticalChance = 40,
		DoorDamage = 9,
		DoorHitSound = HammerHit,
		DropSound = HammerDrop,
		HitFloorSound = HammerHit,
		HitSound = HammerHit,
		IdleAnim = Idle_Weapon2,
		KnockBackOnNoDeath = TRUE,
		KnockdownMod = 0,
		MaxDamage = 2,
		MaxHitCount = 2,
		MaxRange = 1.1,
		MetalValue = 25,
		MinAngle = 0.67,
		MinDamage = 0.5,
		MinRange = 0.61,
		MinimumSwingTime = 3,
		PushBackMod = 0.5,
		RunAnim = Run_Weapon2,
		SplatBloodOnNoDeath = TRUE,
		SplatNumber = 1,
		SubCategory = Swinging,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Bat,
		SwingSound = HammerSwing,
		SwingTime = 3,
		TreeDamage = 0,
		WeaponLength = 0.23,
		WeaponSprite = SupportCorps.MedievalMace,
		Tags = KillAnimal;RepairWithGlue;RepairWithTape,
		StaticModel = MedievalMace,
		WorldStaticModel = MedievalMace,
	}
	
	item MedievalDagger
	{
		DisplayName = Dagger,
		DisplayCategory = Weapon,
		Type = Weapon,
		Weight = 1,
		Icon = MedievalDagger,
		AimingMod = 0.8,
		AttachmentType = Knife,
		BreakSound = HuntingKnifeBreak,
		Categories = SmallBlade,
		CloseKillMove = Jaw_Stab,
		CritDmgMultiplier = 5,
		CriticalChance = 50,
		DamageCategory = Slash,
		DamageMakeHole = TRUE,
		DoorDamage = 1,
		DoorHitSound = HuntingKnifeHit,
		DropSound = HuntingKnifeDrop,
		/*EnduranceMod = 0.5,*/
		HitFloorSound = HuntingKnifeHit,
		HitSound = HuntingKnifeHit,
		IdleAnim = Idle_Weapon2,
		ImpactSound = HuntingKnifeHit,
		IsAimedHandWeapon = TRUE,
		KnockBackOnNoDeath = FALSE,
		KnockdownMod = 0,
		MaxDamage = 1.5,
		MaxHitCount = 1,
		MaxRange = 0.9,
		MetalValue = 30,
		MinAngle = 0.65,
		MinDamage = 0.6,
		MinRange = 0.61,
		MinimumSwingTime = 2,
		PushBackMod = 0.01,
		RunAnim = Run_Weapon2,
		SplatBloodOnNoDeath = TRUE,
		SplatNumber = 4,
		SubCategory = Stab,
		SwingAmountBeforeImpact = 0.02,
		SwingAnim = Stab,
		SwingSound = HuntingKnifeSwing,
		SwingTime = 2,
		TreeDamage = 0,
		WeaponLength = 0.25,
		WeaponSprite = SupportCorps.MedievalDagger,
		WeaponSpritesByIndex = HuntingKnife;HuntingKnifeForged,
		Tags = CutPlant;SharpKnife;ButcherAnimal;Sharpenable;KillAnimal;ButcherAnimal,
        	Sharpness = 1.0,
		StaticModel = MedievalDagger,
		WorldStaticModel = MedievalDagger,
	}

	item ChickenFriedSpiffo
	{
		DisplayName = Fried Chicken (Spiffo-batter dipped),
		DisplayCategory = Food,
		Type = Food,
		Weight = 0.1,
		Icon = ChickenFried,
		FoodType = Beef,
		DangerousUncooked = true,
		CookingSound = BoilingFood,
		IsCookable = True,
		GoodHot = True,
		MinutesToCook = 30,
		MinutesToBurn = 60,
		DaysFresh = 2,
		DaysTotallyRotten = 4,
		HungerChange = -35,
		Calories = 700,
		Carbohydrates = 80,
		Lipids = 40,
		Proteins = 40,
		StaticModel = FriedChicken,
		WorldStaticModel = ChickenFried_Ground,
	}

item YoghurtMaker
{
    DisplayName = Yoghurt Maker,
    DisplayCategory = Material,
    Type = Normal,
    Weight = 5,
    Icon = YoghurtMaker,
    WorldStaticModel = YoghurtMaker,
}

item DirtyYoghurtMaker
{
    DisplayName = Dirty Yoghurt Maker,
    DisplayCategory = Material,
    Type = Normal,
    Weight = 5,
    Icon = YoghurtMaker,
    WorldStaticModel = YoghurtMaker,
}

item YoghurtMakerWithFYoghurt
{
    DisplayName = Yoghurt Maker with Fermenting Yoghurt,
    DisplayCategory = Food,
    Type = Food,
    Weight = 12,
    DaysFresh = 2,
    CantEat = TRUE,
    DaysTotallyRotten = 3,
    Icon = YoghurtMaker,
    WorldStaticModel = YoghurtMaker,
    ReplaceOnRotten = YoghurtMakerWithYoghurt,
}

item YoghurtMakerWithYoghurt
{
    DisplayName = Yoghurt Maker with Yoghurt,
    DisplayCategory = Food,
    Type = Food,
    Weight = 12,
    DaysFresh = 59,
    CantEat = TRUE,
    DaysTotallyRotten = 60,
    Icon = YoghurtMaker,
    WorldStaticModel = YoghurtMaker,
}

item SteelKegWithFYoghurt
{
    DisplayName = Steel Keg with Fermenting Yoghurt,
    DisplayCategory = Food,
    Type = Food,
    Weight = 12,
    DaysFresh = 4,
    CantEat = TRUE,
    DaysTotallyRotten = 5,
    Icon = SteelKeg,
    StaticModel = SteelKeg_Ground,
    WorldStaticModel = SteelKeg_Ground,
    ReplaceOnRotten = SteelKegWithYoghurt,
}

item SteelKegWithYoghurt
{
    DisplayName = Steel Keg with Yoghurt,
    DisplayCategory = Food,
    Type = Food,
    Weight = 12,
    DaysFresh = 10,
    CantEat = TRUE,
    DaysTotallyRotten = 15,
    Icon = SteelKeg,
    StaticModel = SteelKeg_Ground,
    WorldStaticModel = SteelKeg_Ground,
}

item WoodenKegWithFYoghurt
{
    DisplayName = Wooden Keg with Fermenting Yoghurt,
    DisplayCategory = Food,
    Type = Food,
    Weight = 12,
    DaysFresh = 14,
    CantEat = TRUE,
    DaysTotallyRotten = 15,
    Icon = WoodenKeg,
    StaticModel = WoodenKeg_Ground,
    WorldStaticModel = WoodenKeg_Ground,
    ReplaceOnRotten = WoodenKegWithYoghurt,
}

item WoodenKegWithYoghurt
{
    DisplayName = Wooden Keg with Yoghurt,
    DisplayCategory = Food,
    Type = Food,
    Weight = 12,
    DaysFresh = 10,
    CantEat = TRUE,
    DaysTotallyRotten = 15,
    Icon = WoodenKeg,
    StaticModel = WoodenKeg_Ground,
    WorldStaticModel = WoodenKeg_Ground,
}

item BlueberryJamJar
{
    DisplayName = Blueberry Jam Jar,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = BlueberryJamJar,
    Calories = 180,
    Carbohydrates = 35,
    Lipids = 1,
    Proteins = 2,
    StaticModel = BlueberryJamJar,
    WorldStaticModel = BlueberryJamJar,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -30,
    ThirstChange = -15,
    ReplaceOnUse = EmptyJar,
}

item StrawberryJamJar
{
    DisplayName = Strawberry Jam Jar,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = StrawberryJamJar,
    Calories = 200,
    Carbohydrates = 40,
    Lipids = 1,
    Proteins = 3,
    StaticModel = StrawberryJamJar,
    WorldStaticModel = StrawberryJamJar,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -30,
    ThirstChange = -15,
    ReplaceOnUse = EmptyJar,
}

item GrapeJamJar
{
    DisplayName = Grape Jam Jar,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = GrapeJamJar,
    Calories = 220,
    Carbohydrates = 45,
    Lipids = 1,
    Proteins = 2,
    StaticModel = GrapeJamJar,
    WorldStaticModel = GrapeJamJar,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -45,
    ThirstChange = -15,
    ReplaceOnUse = EmptyJar,
}

item PearJamJar
{
    DisplayName = Pear Jam Jar,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = PearJamJar,
    Calories = 210,
    Carbohydrates = 42,
    Lipids = 1,
    Proteins = 2,
    StaticModel = PearJamJar,
    WorldStaticModel = PearJamJar,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -45,
    ThirstChange = -15,
    ReplaceOnUse = EmptyJar,
}

item WinterberryJamJar
{
    DisplayName = Winterberry Jam Jar,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = WinterberryJamJar,
    Calories = 190,
    Carbohydrates = 38,
    Lipids = 1,
    Proteins = 2,
    StaticModel = WinterberryJamJar,
    WorldStaticModel = WinterberryJamJar,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -30,
    ThirstChange = -15,
    ReplaceOnUse = EmptyJar,
}

item BlackberryJamJar
{
    DisplayName = Blackberry Jam Jar,
    DisplayCategory = Food,
    Type = Food,
    Weight = 0.5,
    Icon = BlackberryJamJar,
    Calories = 230,
    Carbohydrates = 47,
    Lipids = 1,
    Proteins = 2,
    StaticModel = BlackberryJamJar,
    WorldStaticModel = BlackberryJamJar,
    Tags = IgnoreZombieDensity,
    CustomEatSound = EatingMushy,
    FoodType = Vegetables,
    HungerChange = -30,
    ThirstChange = -15,
    ReplaceOnUse = EmptyJar,
}

item PasturMachine
{
    DisplayName = Home Milk Pasteurizer Machine,
    DisplayCategory = Tool,
    Type = Normal,
    Weight = 4,
    Icon = PasteurizationMachine,
    MetalValue = 2,
    Tooltip = Tooltip_PasteurizationMachine,
    WorldStaticModel = PasteurizationMachine,
}

item MilkmanBottleBox
{
    DisplayName = Milk Bottle Box,
    DisplayCategory = Material,
    Type = Normal,
    Weight = 2.1,
    Icon = Parcel_Medium_Food,
    WorldStaticModel = MilkmanBottleBox,
}

item MilkBottle
{
    DisplayName = Milk Bottle,
    DisplayCategory = WaterContainer,
    Type = Normal,
    Weight = 0.35,
    Icon = MilkBottleFull,
    StaticModel = MilkBottle,
    WorldStaticModel = MilkBottle,
	FillFromDispenserSound = GetWaterFromDispenserGlass,
	FillFromLakeSound = GetWaterFromLakeBottle,
	FillFromTapSound = GetWaterFromTapGlass,
	FillFromToiletSound = GetWaterFromToilet,
	Tags = Glass,

        component FluidContainer
        {
            ContainerName   = Bottle,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromBottle,
        }
}

item CowMilkBottle
{
    DisplayCategory = Food,
    Weight = 1.35,
    Type = Normal,
    DisplayName = Bottle of Milk,
    Icon = MilkBottleFull,
    StaticModel = MilkBottle,
    WorldStaticModel = MilkBottle,

    component FluidContainer
    {
        ContainerName = Bottle,
        capacity = 1.0,
        Opened    = false,
        CustomDrinkSound = DrinkingFromCarton,

        Fluids
        {
            fluid = CowMilk:1.0,
        }
    }
}

item CowMilkBottleOpened
{
    DisplayCategory = Food,
    Weight = 1.35,
    Type = Normal,
    DisplayName = Bottle of Milk (Opened),
    Icon = MilkBottleFull,
    StaticModel = MilkBottle,
    WorldStaticModel = MilkBottle,

    component FluidContainer
    {
        ContainerName = Bottle,
        capacity = 1.0,
        Opened    = true,
        CustomDrinkSound = DrinkingFromCarton,

        Fluids
        {
            fluid = CowMilk:1.0,
        }
    }
}

item SheepMilkBottle
{
    DisplayCategory = Food,
    Weight = 1.35,
    Type = Normal,
    DisplayName = Bottle of Milk,
    Icon = MilkBottleFull,
    StaticModel = MilkBottle,
    WorldStaticModel = MilkBottle,

    component FluidContainer
    {
        ContainerName = Bottle,
        capacity = 1.0,
        Opened    = false,
        CustomDrinkSound = DrinkingFromCarton,

        Fluids
        {
            fluid = SheepMilk:1.0,
        }
    }
}

item SheepMilkBottleOpened
{
    DisplayCategory = Food,
    Weight = 1.35,
    Type = Normal,
    DisplayName = Bottle of Milk (Opened),
    Icon = MilkBottleFull,
    StaticModel = MilkBottle,
    WorldStaticModel = MilkBottle,

    component FluidContainer
    {
        ContainerName = Bottle,
        capacity = 1.0,
        Opened    = true,
        CustomDrinkSound = DrinkingFromCarton,

        Fluids
        {
            fluid = SheepMilk:1.0,
        }
    }
}

item ScreenMesh
{
    DisplayName = Screen Mesh,
    DisplayCategory = Material,
    Type = Normal,
    Weight = 1.0,
    Icon = ScreenMesh,
    WorldStaticModel = ScreenMesh,
}

item SulfurPowder
{
    DisplayName = Sulfur Powder,
    DisplayCategory = Material,
    Type = Drainable,
    Weight = 0.5,
    Icon = SulfurPowder,
    UseDelta = 0.1,
    WorldStaticModel = SulfurPowder,
}

item Beeswax
{
    DisplayCategory = Material,
    Weight = 1.0,
    Type = Normal,
    DisplayName = Beeswax,
    Icon = Beeswax,
    WorldStaticModel = Beeswax,
}

item GlassPanesBox
{
    DisplayName = Box of Glass Panes,
    DisplayCategory = Material,
    Type = Normal,
    Weight = 1.3,
    Icon = Parcel_Medium_Food,
    WorldStaticModel = GlassPanesBox,
}

}	