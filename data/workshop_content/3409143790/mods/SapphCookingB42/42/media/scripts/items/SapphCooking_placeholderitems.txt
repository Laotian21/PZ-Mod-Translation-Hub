module SapphCooking
{
	imports
	{
		Base,
	}

/***********placeholders b42 recipes/items will be here! **************/

    /*******sapph: since we can't use units yet, i don't want the player to use 60 units of flour for one recipe,********/
    /******* so in here i'll make a placeholder for flour in recipes!***********/
    /*******************PLACEHOLDER ITEMS**************************/
    item SapphFlour
    {
        DisplayName = Flour,
		DisplayCategory = Food,
		Type = Food,
		Weight = 0.2,
		Icon = BreadCrumbsIcon,
		CantEat = TRUE,
		EvolvedRecipe = Soup:6;Stew:6,
		FoodType = Thickener,
		Spice = TRUE,
		HungerChange = -60,
		WorldStaticModel = BreadCrumbs_Ground,
		Tags = Flour;MinorIngredient,
		ToolTip = Tooltip_PlaceholderFlour,
    }

	item MilkPowder
    {
        DisplayName = Milk Powder,
		DisplayCategory = Food,
		Type = Food,
		Weight = 0.2,
		Icon = BreadCrumbsIcon,
		EvolvedRecipe = HotDrink:2;HotDrinkSpiffo:2;HotDrinkTea:2;Soup:6;Stew:6,
		Spice = TRUE,
		HungerChange = -60,
		WorldStaticModel = BreadCrumbs_Ground,
		ToolTip = Tooltip_PlaceholderFlour,
    }

	item SugarPowder
    {
        DisplayName = Sugar,
		DisplayCategory = Food,
		Type = Food,
		Weight = 0.2,
		Icon = BreadCrumbsIcon,
		EvolvedRecipe = HotDrink:2;HotDrinkSpiffo:2;HotDrinkTea:2;Soup:6;Stew:6,
		Spice = TRUE,
		HungerChange = -60,
		WorldStaticModel = BreadCrumbs_Ground,
		ToolTip = Tooltip_PlaceholderFlour,
    }


	item ProteinPowder
    {
        DisplayName = Protein Powder,
		DisplayCategory = Food,
		Type = Food,
		Weight = 0.2,
		Icon = BreadCrumbsIcon,
		EvolvedRecipe = HotDrink:2;HotDrinkSpiffo:2;HotDrinkTea:2;Soup:6;Stew:6,
		HungerChange = -60,
		WorldStaticModel = BreadCrumbs_Ground,
		ToolTip = Tooltip_PlaceholderFlour,
    }

	item RiceGrains
	{
		DisplayName = Rice Grains,
		DisplayCategory = Food,
		Type = Food,
		Weight = 2,
		Icon = BreadCrumbsIcon,
		Packaged = TRUE,
		HungerChange = -60,
		/*ThirstChange = 60,*/
		/*UnhappyChange = 40,*/
		Calories = 2880,
		EvolvedRecipe = Soup:10;Stew:10;Rice:10,
		Carbohydrates = 648,
		Lipids = 0,
		Proteins = 72,
		StaticModel = Rice,
		WorldStaticModel = Rice,
		CantEat = TRUE,
		Tags = DriedFood,
		ToolTip = Tooltip_item_MustAddRecipe,
		FoodType = Rice,
	}
	item ArborioRiceGrains
	{
		DisplayName = Arborio Rice Grains,
		DisplayCategory = Food,
		Type = Food,
		Weight = 2,
		Icon = BreadCrumbsIcon,
		Packaged = TRUE,
		EvolvedRecipe = Soup:10;Stew:10;Rice:10,
		HungerChange = -60,
		/*ThirstChange = 60,*/
		/*UnhappyChange = 40,*/
		Calories = 2880,
		Carbohydrates = 648,
		Lipids = 0,
		Proteins = 72,
		StaticModel = Rice,
		WorldStaticModel = Rice,
		CantEat = TRUE,
		Tags = DriedFood,
		ToolTip = Tooltip_item_MustAddRecipe,
		FoodType = Rice,
	}
	item BrownRiceGrains
	{
		DisplayName = Brown Rice Grains,
		DisplayCategory = Food,
		Type = Food,
		Weight = 2,
		Icon = BrownRiceGrainsIcon,
		Packaged = TRUE,
		HungerChange = -60,
		EvolvedRecipe = Soup:10;Stew:10;Rice:10,
		/*ThirstChange = 60,*/
		/*UnhappyChange = 40,*/
		Calories = 2880,
		Carbohydrates = 648,
		Lipids = 0,
		Proteins = 72,
		StaticModel = Rice,
		WorldStaticModel = Rice,
		CantEat = TRUE,
		Tags = DriedFood,
		ToolTip = Tooltip_item_MustAddRecipe,
		FoodType = Rice,
	}
	

    /*******************PLACEHOLDER LIQUIDS**************************/
    /*****place holder until liquids are working*****/
	item ThermosCoffee
	{
		DisplayCategory 		= Food,
		Weight 		= 1,
		Type 		= Food,
		IsCookable = FALSE,
		DisplayName 		= Thermos of Coffee,
		CustomEatSound 		= PZ_DrinkingFromBottle,
		Icon 		= CoffeeThermosIcon,
		ThirstChange 		= -80,
		HungerChange 		= -10,
		UnhappyChange 		= -80,
		FatigueChange 		= -80,
		StressChange 		= -80,
		ReplaceOnUse 		= EmptyThermos,
		CustomContextMenu 		= Drink,
		CustomEatSound 		= DrinkingFromMug,
		StaticModel 		= H_CoffeeThermos,
		WorldStaticModel 		= CoffeeThermos_Ground,
		Tags = Thermos;CoffeeCup;HideUncooked;HideCooked;CoffeeMaker;HasMetal;returnThermos,
	}
    item ThermosCoffeeEvolved
	{
		DisplayCategory 		= Food,
		Weight 		= 1,
		Type 		= Food,
		IsCookable = FALSE,
		DisplayName 		= Thermos of Coffee,
		CustomEatSound 		= PZ_DrinkingFromBottle,
		Icon 		= CoffeeThermosIcon,
		ThirstChange 		= -100,
		HungerChange 		= -20,
		UnhappyChange 		= -100,
		FatigueChange 		= -100,
		StressChange 		= -100,
		ReplaceOnUse 		= EmptyThermos,
		CustomContextMenu 		= Drink,
		CustomEatSound 		= DrinkingFromMug,
		StaticModel 		= H_CoffeeThermos,
		WorldStaticModel 		= CoffeeThermos_Ground,
		Tags = Thermos;CoffeeCup;HideUncooked;HideCooked;CoffeeMaker;HasMetal;returnThermos,
	}
    item ThermosBeverage
	{
		DisplayCategory 		= Food,
		Weight 		= 1,
		Type 		= Food,
		DisplayName 		= Thermos,
		CustomEatSound 		= PZ_DrinkingFromBottle,
		Icon 		= CoffeeThermosIcon,
		ThirstChange 		= -30,
		UnhappyChange 		= -5,
		FatigueChange 		= -5,
		StressChange 		= -5,
		ReplaceOnUse 		= EmptyThermos,
		CustomContextMenu 		= Drink,
		CustomEatSound 		= DrinkingFromMug,
		StaticModel 		= H_CoffeeThermos,
		WorldStaticModel 		= CoffeeThermos_Ground,
		Tags = CoffeeMaker;HasMetal;HideCooked;returnThermos,
	}

    item MugBrewCoffee
	{
		DisplayCategory 		= Food,
		Weight 		= 0.5,
		Type 		= Food,
		DisplayName 		= Mug of Brewed Coffee,
		CustomEatSound 		= PZ_DrinkingFromBottle,
		IconsForTexture = Mugl;MugRed;MugWhite;MugBlue;MugYellow,
		WorldStaticModelsByIndex = Mug;MugRed;MugWhite;MugBlue;MugYellow,
		ThirstChange 		= -20,
		HungerChange 		= -10,
		UnhappyChange 		= -20,
		FatigueChange 		= -30,
		StressChange 		= -20,
		ReplaceOnUse 		= Mugl,
		CustomContextMenu 		= Drink,
		CustomEatSound 		= DrinkingFromMug,
		GoodHot 		= true,
		StaticModel 		= Mug,
		Tags = CoffeeCup;CoffeeMaker,
	}
    item MugBrewCoffee2
	{
		DisplayCategory 		= Food,
		Weight 		= 0.5,
		CustomEatSound 		= PZ_DrinkingFromBottle,
		Type 		= Food,
		DisplayName 		= Mug of Brewed Coffee,
		Icon 		= MugWhiteFull,
		ThirstChange 		= -20,
		HungerChange 		= -10,
		UnhappyChange 		= -20,
		FatigueChange 		= -30,
		StressChange 		= -20,
		ReplaceOnUse 		= MugWhite,
		CustomContextMenu 		= Drink,
		CustomEatSound 		= DrinkingFromMug,
		GoodHot 		= true,
		StaticModel 		= MugWhite,
		WorldStaticModel 		= MugWhite,
		Tags = CoffeeCup;CoffeeMaker,
	}
	item MugBrewCoffee4
	{
		DisplayCategory 		= Food,
		Weight 		= 0.5,
		Type 		= Food,
		DisplayName 		= Mug of Brewed Coffee,
		CustomEatSound 		= PZ_DrinkingFromBottle,
		Icon 		= MugSpiffoFull,
		ThirstChange 		= -20,
		HungerChange 		= -10,
		UnhappyChange 		= -20,
		FatigueChange 		= -30,
		StressChange 		= -20,
		ReplaceOnUse 		= MugSpiffo,
		CustomContextMenu 		= Drink,
		CustomEatSound 		= DrinkingFromMug,
		GoodHot 		= true,
		StaticModel 		= MugSpiffo,
		WorldStaticModel 		= MugSpiffo,
		Tags = CoffeeCup;CoffeeMaker,
	}
    item MugCoffee_Metal
	{
		DisplayCategory 		= Food,
		Weight 		= 0.5,
		Type 		= Food,
		DisplayName 		= Mug of Coffee,
		CustomEatSound 		= PZ_DrinkingFromBottle,
		Icon 		= MugMetalIcon,
		ThirstChange 		= -10,
		HungerChange 		= -5,
		FatigueChange 		= -5,
		StressChange 		= -5,
		UnhappyChange 		= -10,
		DaysFresh 		= 1,
		DaysTotallyRotten 		= 1,
		ReplaceOnUse 		= Mug_Metal,
		CustomContextMenu 		= Drink,
		CustomEatSound 		= DrinkingFromMug,
		GoodHot 		= true,
		StaticModel 		= H_MugMetal,
		WorldStaticModel 		= MugMetal_Ground,
		Tags = CoffeeMaker;HasMetal,
	}

    /****************PLACE HOLDER RECIPES********************/

	craftRecipe UseasCookingOil1
    {
        timedAction = MixingBowl,
        time            = 30,
        category = SapphCooking,
		CanWalk = true,
        Tags = InHandCraft;Cooking,
        inputs
        {
            item 8 [Base.Butter;Base.Lard],
			item 1 [Base.Bowl],
			+fluid 0.4 CookingOil,
        }
        outputs
        {
        }
    }

	craftRecipe UseasCookingOil2
    {
        timedAction = MixingBowl,
        time            = 20,
        category = SapphCooking,
		CanWalk = true,
        Tags = InHandCraft;Cooking,
        inputs
        {
            item 1 [Base.OilOlive;Base.OilVegetable] flags[ItemCount],
        }
        outputs
        {
			item 1 SapphCooking.PeanutOil,
        }
    }


    craftRecipe GetFlourfromBag
    {
        timedAction = UnPackSack,
        time            = 30,
        category = SapphCooking,
        OnCreate = Recipe.OnCreate.SapphDivideFour,
        Tags = InHandCraft;Cooking;CanBeDoneInDark,
        inputs
        {
            item 1 [Base.Flour2;Base.Cornflour2] flags[ItemCount],
        }
        outputs
       {
           item 8 SapphCooking.SapphFlour,
       }
    }

	craftRecipe GetPowderedIngredients
    {
        timedAction = UnPackBoxSapph_Small,
        time            = 30,
        category = SapphCooking,
        OnCreate = Recipe.OnCreate.SapphDivideFour,
        Tags = InHandCraft;Cooking;CanBeDoneInDark,
        inputs
        {
            item 1 [Base.Sugar;SapphCooking.CanofProteinPowder;SapphCooking.CanofPowderedMilk;SapphCooking.PowderedEggs] mappers[resultType] flags[Prop2;ItemCount],
        }
        outputs
       {
           item 4 mapper:resultType,
       }
	   itemMapper resultType
		{
			SapphCooking.SugarPowder = Base.Sugar,
			SapphCooking.MilkPowder = SapphCooking.CanofPowderedMilk,
            SapphCooking.ProteinPowder = SapphCooking.CanofProteinPowder,
			SapphCooking.EggPowder =SapphCooking.PowderedEggs,
		}
    }

	craftRecipe ConvertBottleSapph
    {
        timedAction = UnPackBoxSapph_Small,
        time            = 10,
        category = SapphCooking,
        Tags = InHandCraft;Cooking;CanBeDoneInDark,
        inputs
        {
            item 1 [SapphCooking.BottleofAppleJuice;SapphCooking.BottleofGrapeJuice;SapphCooking.BottleofOrangeJuice;SapphCooking.BottleofPeachJuice;SapphCooking.BottleofPineappleJuice;SapphCooking.BottleofWatermelonJuice;SapphCooking.BottleofStrawberryJuice] mode:destroy flags[IsEmpty;ItemCount],
        }
        outputs
       	{
           item 1 Base.WaterBottle,
       	}
	}
	craftRecipe GetRiceFromBag
    {
        timedAction = UnPackSack,
        time            = 30,
        category = SapphCooking,
        OnCreate = Recipe.OnCreate.SapphMake2Result,
        Tags = InHandCraft;Cooking;CanBeDoneInDark,
        inputs
        {
            item 1 [Base.Rice;SapphCooking.ArborioRice;SapphCooking.BrownRice] mappers[riceType],
        }
        outputs
		{
           item 2 mapper:riceType,
        }
	   itemMapper riceType
		{
			SapphCooking.RiceGrains = Base.Rice,
			SapphCooking.ArborioRiceGrains = SapphCooking.ArborioRice,
			SapphCooking.BrownRiceGrains = SapphCooking.BrownRice,
		}
    }

}