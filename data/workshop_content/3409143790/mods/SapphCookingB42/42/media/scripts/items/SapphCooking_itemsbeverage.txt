
module SapphCooking
{
	imports
	{
		Base,
	}	
	
		/****************************** Items that aren't pans/bowls will be here. ******************************/	
		
    item BottleofGrapeJuice
	{
		DisplayCategory 		= Food,
		Weight 		= 0.3,
		DisplayName 		= Bottle of Grape Juice,
		Icon = WaterBottle,
		IconColorMask = WaterBottle_Mask2,
		IconFluidMask = WaterBottle_Mask,
		CantBeFrozen 		= TRUE,
		StaticModel 		= H_BottleDrinkmix_Grape,
		WorldStaticModel 		= BottleDrinkmix_Grape,
        FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		component FluidContainer
        	{
			ContainerName   = BottlePlastic,
			PickRandomFluid	= true,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,

				Fluids
				{
					fluid           = JuiceGrape:1.0,
				}
       		}
	}
	item BottleofWatermelonJuice
	{
		DisplayCategory 		= Food,
		Weight 		= 0.3,
		Type 		= Food,
		DisplayName 		= Bottle,
		Icon = WaterBottle,
		IconColorMask = WaterBottle_Mask2,
		IconFluidMask = WaterBottle_Mask,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		CantBeFrozen 		= TRUE,
		StaticModel 		= H_BottleDrinkmix_Watermelon,
		WorldStaticModel 		= BottleDrinkmix_Watermelon,
		component FluidContainer
        	{
			ContainerName   = BottlePlastic,
			PickRandomFluid	= true,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,

				Fluids
				{
					fluid           = JuiceWatermelon:1.0,
				}
       		}
	}


    item BottleofLemonJuice
	{
		DisplayCategory 		= Food,
		Weight 		= 0.3,
		DisplayName 		= Bottle,
		Icon = WaterBottle,
		IconColorMask = WaterBottle_Mask2,
		IconFluidMask = WaterBottle_Mask,
		CantBeFrozen 		= TRUE,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		StaticModel 		= H_BottleDrinkmix_Lemonade,
		WorldStaticModel 		= BottleDrinkmix_Lemonade,
        component FluidContainer
        	{
			ContainerName   = BottlePlastic,
			PickRandomFluid	= true,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,

				Fluids
				{
					fluid           = JuiceLemon:1.0,
				}
       		}
	}
	item BottleofOrangeJuice
	{
		DisplayCategory 		= Food,
		Weight 		= 0.3,
		DisplayName 		= Bottle,
		Icon = WaterBottle,
		IconColorMask = WaterBottle_Mask2,
		IconFluidMask = WaterBottle_Mask,
		CantBeFrozen 		= TRUE,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		StaticModel 		= H_BottleDrinkmix_Orange,
		WorldStaticModel 		= BottleDrinkmix_Orange,
        component FluidContainer
        	{
			ContainerName   = BottlePlastic,
			PickRandomFluid	= true,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,

				Fluids
				{
					fluid           = JuiceOrange:1.0,
				}
       		}
	}

    item BottleofPeachJuice
	{
		DisplayCategory 		= Food,
		Weight 		= 0.3,
		DisplayName 		= Bottle,
		Icon = WaterBottle,
		IconColorMask = WaterBottle_Mask2,
		IconFluidMask = WaterBottle_Mask,
		CantBeFrozen 		= TRUE,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		StaticModel 		= H_BottleDrinkmix_Peach,
		WorldStaticModel 		= BottleDrinkmix_Peach,
        component FluidContainer
        	{
			ContainerName   = BottlePlastic,
			PickRandomFluid	= true,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,

				Fluids
				{
					fluid           = JuicePeach:1.0,
				}
       		}
	}

    item BottleofStrawberryJuice
	{
		DisplayCategory 		= Food,
		Weight 		= 0.3,
		DisplayName 		= Bottle,
		Icon = WaterBottle,
		IconColorMask = WaterBottle_Mask2,
		IconFluidMask = WaterBottle_Mask,
		CantBeFrozen 		= TRUE,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		StaticModel 		= H_BottleDrinkmix_Strawberry,
		WorldStaticModel 		= BottleDrinkmix_Strawberry,
        component FluidContainer
        	{
			ContainerName   = BottlePlastic,
			PickRandomFluid	= true,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,

				Fluids
				{
					fluid           = JuiceStrawberry:1.0,
				}
       		}
	}
	item BottleofPineappleJuice
	{
		DisplayCategory 		= Food,
		Weight 		= 0.3,
		DisplayName 		= Bottle,
		Icon = WaterBottle,
		IconColorMask = WaterBottle_Mask2,
		IconFluidMask = WaterBottle_Mask,
		CustomEatSound 		= DrinkingFromCarton,
		CantBeFrozen 		= TRUE,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		StaticModel 		= H_BottleDrinkmix_Pineapple,
		WorldStaticModel 		= BottleDrinkmix_Pineapple,
        component FluidContainer
        {
        ContainerName   = BottlePlastic,
        PickRandomFluid	= true,
        capacity        = 1.0,
        CustomDrinkSound = DrinkingFromBottlePlastic,

            Fluids
            {
                fluid           = JuicePineapple:1.0,
            }
        }
	}
	item BottleofAppleJuice
	{
		DisplayCategory 		= Food,
		Weight 		= 0.3,
		DisplayName 		= Bottle,
		Icon = WaterBottle,
		IconColorMask = WaterBottle_Mask2,
		IconFluidMask = WaterBottle_Mask,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		CustomEatSound 		= DrinkingFromCarton,
		StaticModel 		= H_BottleDrinkmix_Apple,
		WorldStaticModel 		= BottleDrinkmix_Apple,
		component FluidContainer
        	{
			ContainerName   = BottlePlastic,
			PickRandomFluid	= true,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,

				Fluids
				{
					fluid           = JuiceApple:1.0,
				}
       		}
	}

    item ChickenBroth
	{
		DisplayName 		= Chicken Broth,
		Icon 		= ChickenBrothIcon,
		DisplayCategory = Food,
		Type = Food,
		Weight = 0.3,
		CantBeFrozen = TRUE,
		EvolvedRecipe = RicePot:10;RicePan:10;PastaPot:10;PastaPan:10;Soup:10;Stew:10,
		Packaged = TRUE,
		CustomEatSound 		= DrinkingFromCarton,
		FluReduction    =   5,
		HungerChange = -20,
		ThirstChange = -20,
		UnhappyChange = -10,
		Calories = 760,
		Carbohydrates = 0,
		Lipids = 80,
		Proteins = 0,
		CustomContextMenu 		= Drink,
		WorldStaticModel = BrothCarton,
		StaticModel = H_BrothChicken,
		EatType 		= bottle,
		Tags = Broth;SapphCookingBroth,
	}
	item BeefBroth
	{
		DisplayName = Beef Broth,
		Icon = BeefBrothIcon,
		DisplayCategory = Food,
		FluReduction    =   5,
		Type = Food,
		Weight = 0.3,
		CantBeFrozen = TRUE,
		EvolvedRecipe = RicePot:10;RicePan:10;PastaPot:10;PastaPan:10;Soup:10;Stew:10,
		Packaged = TRUE,
		CustomEatSound 		= DrinkingFromCarton,
		HungerChange = -20,
		ThirstChange = -20,
		UnhappyChange = -10,
		Calories = 800,
		Carbohydrates = 0,
		Lipids = 80,
		Proteins = 0,
		WorldStaticModel = BrothCarton,
		StaticModel = H_BrothChicken,
		CustomContextMenu 		= Drink,
		EatType 		= bottle,
		Tags = Broth;SapphCookingBroth,
	}
	item VegetableBroth
	{
		DisplayName 		= Bottle of Vegetable Broth,
		Icon 		= BottleWithGas,
		DisplayCategory = Food,
		FluReduction    =   5,
		Type = Food,
		Weight = 0.2,
		CantBeFrozen = TRUE,
		EvolvedRecipe = RicePot:10;RicePan:10;PastaPot:10;PastaPan:10;Soup:10;Stew:10,
		Packaged = TRUE,
		CustomEatSound 		= DrinkingFromCarton,
		ReplaceOnUse = PopBottleEmpty,
		HungerChange = -20,
		ThirstChange = -20,
		UnhappyChange = -10,
		Calories = 800,
		Carbohydrates = 0,
		Lipids = 130,
		Proteins = 0,
		CustomContextMenu 		= Drink,
		WorldStaticModel = WaterBottleFull,
		StaticModel = WaterBottle,
		EatType 		= bottle,
		Tags = Broth;SapphCookingBroth,
	}

    item BottlewithProteinShake
	{
		DisplayCategory 		= Food,
		HungerChange 		= -10,
		Weight 		= 1.0,
		Type 		= Food,
		ThirstChange 		= -60,
		DisplayName 		= Bottle,
		Icon = WaterBottle,
		IconColorMask = WaterBottle_Mask2,
		IconFluidMask = WaterBottle_Mask,
		DaysFresh 		= 4,
		DaysTotallyRotten 		= 7,
		CustomContextMenu 		= Drink,
		CustomEatSound 		= DrinkingFromCarton,
		FoodType 		= NoExplicit,
		Carbohydrates 		= 30,
		Proteins 		= 250,
		Lipids 		= 2.5,
		Calories 		= 50,
		StaticModel 		= WaterBottle,
		WorldStaticModel 		= WaterBottleFull,
        FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		component FluidContainer
        	{
			ContainerName   = BottlePlastic,
			PickRandomFluid	= true,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,

				Fluids
				{
					fluid           = ProteinShake:1.0,
				}
       		}
	}
	item PopBottlewithProteinShake
	{
		DisplayCategory 		= Food,
		Weight 		= 1.0,
		Type 		= Food,
		DisplayName 		= Bottle,
		Icon     = PopBottle,
        IconColorMask       = WaterBottle_Mask2,
        IconFluidMask       = PopBottle_Mask,
		CustomEatSound 		= DrinkingFromCarton,
		FoodType 		= NoExplicit,
		CantBeFrozen 		= TRUE,
		StaticModel 		= PopBottle,
		WorldStaticModel 		= EmptyPopBottle,
        FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		component FluidContainer
        	{
			ContainerName   = BottlePlastic,
			PickRandomFluid	= true,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,

				Fluids
				{
					fluid           = ProteinShake:1.0,
				}
       		}
	}

	item BottlewithMilk
	{
		DisplayCategory 		= Food,
		Weight 		= 1.0,
		Type 		= Food,
		DisplayName 		= Bottle,
		Icon     = PopBottle,
        IconColorMask       = WaterBottle_Mask2,
        IconFluidMask       = PopBottle_Mask,
		CustomEatSound 		= DrinkingFromCarton,
		FoodType 		= NoExplicit,
		CantBeFrozen 		= TRUE,
		StaticModel 		= PopBottle,
		WorldStaticModel 		= EmptyPopBottle,
        FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		component FluidContainer
			{
			ContainerName   = BottlePlastic,
			PickRandomFluid	= true,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,

				Fluids
				{
					fluid           = CowMilk:1.0,
				}
			}
	}

	item BottleofJuice
	{
		DisplayCategory 		= Food,
		HungerChange 		= -10,
		Weight 		= 0.3,
		Type 		= Food,
		ThirstChange 		= -50,
		DisplayName 		= Bottle of Juice,
		Icon 		= BottlewithPineappleJuiceIcon,
		CustomContextMenu 		= Drink,
		CustomEatSound 		= DrinkingFromCarton,
		FoodType 		= NoExplicit,
		Carbohydrates 		= 5,
		Proteins 		= 40,
		Lipids 		= 2.5,
		Calories 		= 50,
		CantBeFrozen 		= TRUE,
		StaticModel 		= H_BottleDrinkmix_Pineapple,
		WorldStaticModel 		= BottleDrinkmix_Pineapple,
		UnhappyChange 		= -3,
		BoredomChange 		= -3,
		ReplaceOnUse 		= WaterBottleEmpty,
		Tags = Juice,
	}
	

	item StrawberryMilk
	{
		DisplayCategory 		= Food,
		HungerChange 		= -15,
		Weight 		= 1.0,
		Type 		= Food,
		ThirstChange 		= -110,
		DisplayName 		= Strawberry Milk,
		Icon 		= StrawberryMilk,
		DaysFresh 		= 4,
		DaysTotallyRotten 		= 7,
		CustomContextMenu 		= Drink,
		CustomEatSound 		= DrinkingFromCarton,
		EvolvedRecipe 		= HotDrink:3,
		FoodType 		= NoExplicit,
		Carbohydrates 		= 13,
		Proteins 		= 8,
		Lipids 		= 2.5,
		Calories 		= 190,
		Packaged 		= TRUE,
		CantBeFrozen 		= TRUE,
		StaticModel 		= H_StrawberryMilk,
		WorldStaticModel 		= StrawberryMilk_Ground,
		component FluidContainer
			{
			ContainerName   = Carton,
			PickRandomFluid	= true,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,

				Fluids
				{
					fluid           = MilkStrawberry:1.0,
				}
			}
	}

/************turn this into a liquid later!**********/
    item VegetableBroth
	{
		DisplayName 		= Bottle of Vegetable Broth,
		Icon 		= BottleWithGas,
		DisplayCategory = Food,
		FluReduction    =   5,
		Type = Food,
		Weight = 0.2,
		CantBeFrozen = TRUE,
		EvolvedRecipe = RicePot:10;RicePan:10;PastaPot:10;PastaPan:10;Soup:10;Stew:10,
		Packaged = TRUE,
		CustomEatSound 		= DrinkingFromCarton,
		HungerChange = -20,
		ThirstChange = -20,
		UnhappyChange = -10,
		Calories = 800,
		Carbohydrates = 0,
		Lipids = 130,
		Proteins = 0,
		CustomContextMenu 		= Drink,
		WorldStaticModel = WaterBottleFull,
		StaticModel = WaterBottle,
		EatType 		= bottle,
		Tags = Broth;SapphCookingBroth,
	}
    /**this too**/
    /***item HotChocolate***/
	/******add melted chocolate as liquid later - maybe?*****/



    item EnergyDrink
	{
		DisplayCategory = Food,
		Weight 		= 0.3,
		Type 		= Food,
		DisplayName 		= Energy Drink,
		CustomEatSound 		= PZ_DrinkingFromBottle,
		Icon 		= EnergyDrinkIcon,
		CustomEatSound 		= DrinkingFromMug,
		StaticModel 		= H_EnergyDrink,
		WorldStaticModel 		= EnergyDrink_Ground,
        FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		component FluidContainer
        	{
			ContainerName   = BottlePlastic,
			PickRandomFluid	= true,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,

				Fluids
				{
					fluid           = EnergyDrink:1.0,
				}
       		}
	}

    item CocktailMixer
	{
		Weight 		= 0.3,
		Type 		= Normal,
		DisplayName 		= Cocktail Mixer,
		Icon 		= CocktailMixerIcon,
		WorldStaticModel 		= CocktailMixer_Ground,
		StaticModel = H_CocktailMixerDrink,
        FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		component FluidContainer
        	{
			ContainerName   = BottlePlastic,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,
       		}
	}
    item Empty_FrenchPress
	{
	    DisplayCategory = Cooking,
		Weight	=	0.5,
		Type	=	Normal,
		DisplayName	= Empty French Press,
		Icon	= FrenchPress_EmptyIcon,
		IconFluidMask = FrenchPress_EmptyIcon_Mask,
		MetalValue = 30,
		CantBeFrozen = false,
		StaticModel = H_FrenchPress_Water,
		WorldStaticModel = FrenchPress_Ground,
		CustomEatSound = DrinkingFromGeneric,
        FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		component FluidContainer
        	{
			ContainerName   = FrenchPress,
			capacity        = 1.0,
			CustomDrinkSound = DrinkingFromBottlePlastic,
       		}
	}

	item Coffee_FrenchPress
	{
		DisplayCategory 		= Food,
		Weight 		= 1.2,
		Type 		= Food,
		IsCookable = FALSE,
		DisplayName 		= Coffee French Press,
		CustomEatSound 		= PZ_DrinkingFromBottle,
		Icon 		= FrenchPress_CoffeeIcon,
		ThirstChange 		= -50,
		HungerChange 		= -15,
		UnhappyChange 		= -50,
		FatigueChange 		= -50,
		StressChange 		= -50,
		ReplaceOnUse 		= Empty_FrenchPress,
		CustomContextMenu 		= Drink,
		CustomEatSound 		= DrinkingFromMug,
		StaticModel 		= H_FrenchPress_Coffee,
		WorldStaticModel 		= FrenchPress_Coffee_Ground,
		Tags = Thermos;CoffeeCup;HasMetal,
	}

    item Mug_Metal
	{
	    DisplayCategory = Cooking,
		Weight	=	0.2,
		Type	=	Normal,
		DisplayName	=	Empty Metal Mug,
		Icon	=	MugMetalIcon,
		RainFactor = 0.2,
		Tooltip = Tooltip_item_RainFromGround,
		StaticModel = H_MugMetal,
		WorldStaticModel = MugMetal_Ground,
		MetalValue 		= 30,
		Tags = CoffeeMaker;HasMetal,
        FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		component FluidContainer
        	{
			ContainerName   = MugMetal,
			capacity        = 0.2,
			CustomDrinkSound = DrinkingFromBottlePlastic,
       		}
	}

	item EmptyThermos
	{
	    DisplayCategory = Cooking,
		Weight	=	0.5,
		CanStoreWater	=	TRUE,
		Type	=	Normal,
		DisplayName	= Thermos,
		Icon	= CoffeeThermosIcon,
		MetalValue = 30,
		StaticModel = H_CoffeeThermos,
		WorldStaticModel = CoffeeThermos_Ground,
		CustomEatSound = DrinkingFromGeneric,
		FillFromDispenserSound = GetWaterFromDispenserGlass,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapGlass,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CoffeeMaker;HasMetal,

        component FluidContainer
        {
			ContainerName   = Thermos,
			RainFactor	= 0.5,
			capacity        = 2.0,
			CustomDrinkSound = DrinkingFromMug,
		}
		
	}

	item CocktailGlass
	{
		Type 		= Normal,
		DisplayCategory 		= Cooking,
		CanStoreWater 		= TRUE,
		Tooltip 		= Tooltip_item_RainFromGround,
		DisplayName 		= Cocktail Glass,
		Icon 		= CocktailGlassEmptyIcon,
		IconFluidMask = CocktailGlassEmptyIcon_Mask,
		Weight 		= 0.1,
		WorldStaticModel 		= CocktailGlass_Empty,
		StaticModel 		= H_CocktailGlass_Water,
		CustomEatSound = DrinkingFromGeneric,
		FillFromDispenserSound = GetWaterFromDispenserGlass,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapGlass,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CoffeeMaker,
		component FluidContainer
        {
			ContainerName   = CocktailGlass,
			RainFactor	= 0.5,
			capacity        = 0.5,
			CustomDrinkSound = DrinkingFromMug,
		}
	}

	item LowballGlass
	{
		Type 		= Normal,
		DisplayCategory 		= Cooking,
		StaticModel 		= H_LowballGlass_Water,
		CanStoreWater 		= TRUE,
		RainFactor 		= 0.1,
		Tooltip 		= Tooltip_item_RainFromGround,
		DisplayName 		= Lowball Glass,
		Icon 		= LowballGlassIcon,
		IconFluidMask = LowballGlassIcon_Mask,
		Weight 		= 0.1,
		WorldStaticModel 		= LowballGlass_Empty,
		CustomEatSound = DrinkingFromGeneric,
		FillFromDispenserSound = GetWaterFromDispenserGlass,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapGlass,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CoffeeMaker,
		component FluidContainer
        {
			ContainerName   = LowballGlass,
			RainFactor	= 0.5,
			capacity        = 0.5,
			CustomDrinkSound = DrinkingFromMug,
		}
	}

	/*******************sapph: need to be drainable again, cause - cant seem to understand how units work********/
	item FryBatter
	{
		DisplayCategory 		= Food,
		Type = Drainable,
		UseDelta = 0.1,
		UseWhileEquipped = FALSE,
		DisplayName 		= Fry Batter,
		Icon 		= CakeBatter,
		ReplaceOnDeplete	= Bowl,
		Weight 		= 0.3,
		Carbohydrates 		= 40,
		Proteins 		= 5,
		Lipids 		= 20,
		Calories 		= 500,
		WorldStaticModel 		= CakeBatter,
	}
	/********sapph: liquids are a bit broken, so i'll wait a bit
	item FryBatter
	{
		DisplayCategory 		= Food,
		Type 		= Food,
		DisplayName 		= Fry Batter,
		Icon = FryBatterIcon,
		IconFluidMask = FryBatterIcon_Mask,
		PourType = bowl,
		Weight 		= 0.3,
		WorldStaticModel 		= CakeBatter,
		FillFromDispenserSound = GetWaterFromDispenserCeramic,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapCeramic,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = Bowl,
		component FluidContainer
        {
            ContainerName   = Bowl,
            capacity        = 1.0,
            CustomDrinkSound = DrinkingFromMug,
			Fluids
				{
					fluid           = FryBatter:1.0,
				}
        }
	}**********/
}