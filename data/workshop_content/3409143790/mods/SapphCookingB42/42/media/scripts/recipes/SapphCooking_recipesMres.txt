module SapphCooking
{
	imports
	{
		Base,
	}	
		/****************************** mre recipes will be here. ******************************/

    craftRecipe Open Pack of Meal Ready to Eat
    {
        timedAction = UnPackBox_Small,
        time            = 50,
        category = SapphCooking,
		OnCreate = recipe_MREopen1,
        Tags = InHandCraft;Cooking,
        inputs
        {
            item 1 [SapphCooking.MRE_Pack1;SapphCooking.MRE_Pack2;SapphCooking.MRE_Pack3;SapphCooking.MRE_Pack4;SapphCooking.MRE_Pack5;SapphCooking.MRE_Pack6] mappers[mreType] flags[ItemCount],
        }
       outputs
        {
           item 1 mapper:mreType,
        }
       itemMapper mreType
        {
           SapphCooking.MRE_BeefStewUn = SapphCooking.MRE_Pack1,
           SapphCooking.MRE_PorkwRiceUn = SapphCooking.MRE_Pack2,
           SapphCooking.MRE_SpaguettiUn = SapphCooking.MRE_Pack3,
           SapphCooking.MRE_OmeletwHamUn = SapphCooking.MRE_Pack4,
           SapphCooking.MRE_SausageswGravyUn = SapphCooking.MRE_Pack5,
           SapphCooking.MRE_CheeseTortelliniUn = SapphCooking.MRE_Pack6,
        }
    }
    craftRecipe Open Pack of Meal Ready to Eat2
    {
        timedAction = UnPackBox_Small,
        time            = 50,
        category = SapphCooking,
		OnCreate = recipe_MREopen2,
        Tags = InHandCraft;Cooking,
        inputs
        {
            item 1 [SapphCooking.MRE_Pack7;SapphCooking.MRE_Pack8;SapphCooking.MRE_Pack9;SapphCooking.MRE_Pack10;SapphCooking.MRE_Pack11;SapphCooking.MRE_Pack12] mappers[mreType] flags[ItemCount],
        }
       outputs
        {
           item 1 mapper:mreType,
        }
       itemMapper mreType
        {
           SapphCooking.MRE_MeatballsinSauceUn = SapphCooking.MRE_Pack7,
           SapphCooking.MRE_LasagnaUn = SapphCooking.MRE_Pack8,
           SapphCooking.MRE_ChiliwBeansUn = SapphCooking.MRE_Pack9,
           SapphCooking.MRE_InChickenStrogonoffUn = SapphCooking.MRE_Pack10,
           SapphCooking.MRE_InBeefStrogonoffUn = SapphCooking.MRE_Pack11,
           SapphCooking.MRE_InRiceMincedMeatUn = SapphCooking.MRE_Pack12,
        }
    }

    craftRecipe Heat MRE
    {
        timedAction = UnPackBox_Small,
        time            = 50,
        category = SapphCooking,
        CanWalk = true,
		OnCreate = Recipe.OnCreate.SapphAutoCook,
        Tags = InHandCraft;Cooking,
        inputs
        {
            item 1 [SapphCooking.MRE_FlamelessRationHeater],
            item 1 [SapphCooking.MRE_BeefStewUn;SapphCooking.MRE_PorkwRiceUn;SapphCooking.MRE_SpaguettiUn;SapphCooking.MRE_OmeletwHamUn;SapphCooking.MRE_SausageswGravyUn;SapphCooking.MRE_CheeseTortelliniUn;SapphCooking.MRE_MeatballsinSauceUn;SapphCooking.MRE_LasagnaUn;SapphCooking.MRE_ChiliwBeansUn;SapphCooking.MRE_InChickenStrogonoffUn;SapphCooking.MRE_InBeefStrogonoffUn;SapphCooking.MRE_InRiceMincedMeatUn] mappers[mreType] flags[InheritFoodAge;ItemCount],
            item 1 [*],
            -fluid 0.2 [Water],
        }
       outputs
        {
           item 1 mapper:mreType,
        }
       itemMapper mreType
        {
           SapphCooking.MRE_BeefStew = SapphCooking.MRE_BeefStewUn,
           SapphCooking.MRE_PorkwRice = SapphCooking.MRE_PorkwRiceUn,
           SapphCooking.MRE_Spaguetti = SapphCooking.MRE_SpaguettiUn,
           SapphCooking.MRE_OmeletwHam = SapphCooking.MRE_OmeletwHamUn,
           SapphCooking.MRE_SausageswGravy = SapphCooking.MRE_SausageswGravyUn,
           SapphCooking.MRE_CheeseTortellini = SapphCooking.MRE_CheeseTortelliniUn,
           SapphCooking.MRE_MeatballsinSauce = SapphCooking.MRE_MeatballsinSauceUn,
           SapphCooking.MRE_Lasagna = SapphCooking.MRE_LasagnaUn,
           SapphCooking.MRE_ChiliwBeans = SapphCooking.MRE_ChiliwBeansUn,
           SapphCooking.MRE_InChickenStrogonoff = SapphCooking.MRE_InChickenStrogonoffUn,
           SapphCooking.MRE_InBeefStrogonoff = SapphCooking.MRE_InBeefStrogonoffUn,
           SapphCooking.MRE_InRiceMincedMeat = SapphCooking.MRE_InRiceMincedMeatUn,
        }
    }


}