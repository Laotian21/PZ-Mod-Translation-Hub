module PompsItems
{
    /****************************** Core Stuff ******************************/
	    item PIMysteryFoodIcon
    {
        DisplayCategory = Material,
        Weight	=	0.0,
        Type	=	Normal,
        DisplayName	=	Something Edible?,
        Icon	=	PIMysteryFood,
        WorldStaticModel = Base.Sponge,
    }
    /****************************** CoolCategory Canned Dranks ******************************/
		item StallionMilk
	{
		DisplayName = Cosmos Co. Canned Stallion Milk,
		DisplayCategory = Food,
		Type = Food,
		Weight = 0.3,
		Icon = StallionMilk,
		CannedFood = TRUE,
		CantEat = TRUE,
		Packaged = TRUE,
		Calories = 156,
		Carbohydrates = 8,
		Lipids = 32,
		Proteins = 16,
		StaticModel = StallionMilk_Ground,
		WorldStaticModel = StallionMilk_Ground,
		Tags = HasMetal,
		Tooltip = Tooltip_StallionMilk,
	}
	item StallionMilkOpen
	{
		DisplayName = Stallion Milk Can,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.2,
			Icon = StallionMilkOpen,
			IconFluidMask = StallionMilkOpen_Mask,
		EatType = candrink,
		StaticModel = StallionMilkOpen_Ground,
		WorldStaticModel = StallionMilkOpen_Ground,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = Cookable;HasMetal,

        	component FluidContainer
        	{
            	ContainerName   = PIStallionMilk,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = PIStallionStuff:1.0,
            		}
        	}
	}
    /****************************** CoolCategory Refrigerated ******************************/
	item PIChocMilk
	{
		DisplayName = Jug,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 1.0,
			Icon = PIChocMilk,
			IconFluidMask = PIChocMilk_Mask,
		EatType = bottle,
		StaticModel = ChocMilkHand,
		WorldStaticModel = ChocMilk,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PIChocMilkJug,
            	capacity        = 3.8,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = MilkChocolate:1.0,
            		}
        	}
	}
	item PISweetTea
	{
		DisplayName = Jug,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 1.0,
			Icon = PISweetTeaEmpty,
			IconFluidMask = PISweetTea_Mask,
		EatType = bottle,
		StaticModel = PISweetTeaHand,
		WorldStaticModel = PISweetTea,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PISweetTeaJug,
            	capacity        = 3.8,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PISweetTea:1.0,
            		}
        	}
	}
	item PISchoolMilkChocolate
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.1,
		Icon = PISchoolMilkChocolate,
		EatType = popcan,
		StaticModel = PISchoolMilkChocolateHand,
		WorldStaticModel = PISchoolMilkChocolate,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tooltip	= Tooltip_PICowPun2,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PISchoolMilkChocolate,
            	capacity        = 0.23,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = MilkChocolate:1.0,
            		}
        	}
	}
	item PISchoolMilkStrawberry
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.1,
		Icon = PISchoolMilkStrawberry,
		EatType = popcan,
		StaticModel = PISchoolMilkStrawberryHand,
		WorldStaticModel = PISchoolMilkStrawberry,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tooltip	= Tooltip_PICowPun3,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PISchoolMilkStrawberry,
            	capacity        = 0.23,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PIStrawberryMilk:1.0,
            		}
        	}
	}
	item PISchoolMilkRegular
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.1,
		Icon = PISchoolMilkRegular,
		EatType = popcan,
		StaticModel = PISchoolMilkRegularHand,
		WorldStaticModel = PISchoolMilkRegular,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tooltip	= Tooltip_PICowPun1,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PISchoolMilkRegular,
            	capacity        = 0.23,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = CowMilk:1.0,
            		}
        	}
	}
    /****************************** CoolCategory Beverage ******************************/
	item Brawndo
	{
		DisplayName = Brawndo,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.25,
		Icon = Brawndo,
		EatType = popcan,
		StaticModel = BrawndoHand,
		WorldStaticModel = Brawndo,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = PIBrawndoCan,
		Opened	= false,
            	capacity        = 0.7,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = PIBrawndo:1.0,
            		}
        	}
	}
	item PIRootBeer
	{
		DisplayName = Root Beer,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.2,
		Icon = PIRootBeer,
		EatType = popcan,
		StaticModel = RootBeerHand,
		WorldStaticModel = RootBeer,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tooltip	= Tooltip_RBAW,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = PIRootBeerCan1,
		Opened	= false,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = PIRootBeer:1.0,
            		}
        	}
	}
    item RootBeerBox
    {
        Weight	=	3,
        Type	=	Food,
        DisplayName	=	Box of RB Root Beer,
        Icon	=	RootBeerBox,
        Packaged = TRUE,
        AlwaysWelcomeGift	=	true,
        Carbohydrates = 468,
        Proteins = 0,
        Lipids = 0,
        Calories = 1920,
		StaticModel = RootBeerBox,
        WorldStaticModel = RootBeerBox,
        CantBeFrozen = TRUE,
    }
	item LugRootBeer
	{
		DisplayName = Root Beer,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.2,
		Icon = PIRootBeer3,
		EatType = popcan,
		StaticModel = LugRootBeerHand,
		WorldStaticModel = LugRootBeer,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tooltip	= Tooltip_RBLug,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = PIRootBeerCan3,
		Opened	= false,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = PIRootBeer:1.0,
            		}
        	}
	}
    item LugRootBeerBox
    {
        Weight	=	3,
        Type	=	Food,
        DisplayName	=	Box of Lug Root Beer,
        Icon	=	PILugRootBeerBox,
        Packaged = TRUE,
        AlwaysWelcomeGift	=	true,
        Carbohydrates = 516,
        Proteins = 0,
        Lipids = 0,
        Calories = 1920,
		StaticModel = LugRootBeerBox,
        WorldStaticModel = LugRootBeerBox,
        CantBeFrozen = TRUE,
    }
	item RMRootBeer
	{
		DisplayName = Root Beer,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.2,
		Icon = PIRootBeer2,
		EatType = popcan,
		StaticModel = RMRootBeerHand,
		WorldStaticModel = RMRootBeer,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tooltip	= Tooltip_RMRootBeer,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = PIRootBeerCan2,
		Opened	= false,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = PICraftRootBeer:1.0,
            		}
        	}
	}
	item PISportsDrinkGrape
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
			Icon = PISportsDrinkGrapeEmpty,
			IconFluidMask = PISportsDrink_Mask,
		EatType = bourbon,
		StaticModel = SportsDrinkGrapeHand,
		WorldStaticModel = PurpleDrank,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PISportsDrinkGrapeBottle,
            	capacity        = 0.35,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PISportsDrinkGrape:1.0,
            		}
        	}
	}
	item PISportsDrinkBlue
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
			Icon = PISportsDrinkBlueEmpty,
			IconFluidMask = PISportsDrink_Mask,
		EatType = bourbon,
		StaticModel = SportsDrinkBlueHand,
		WorldStaticModel = SportsDrinkBlue,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PISportsDrinkBlueBottle,
            	capacity        = 0.35,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PISportsDrinkBlue:1.0,
            		}
        	}
	}
	item PISportsDrinkFruit
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
			Icon = PISportsDrinkFruitEmpty,
			IconFluidMask = PISportsDrink_Mask,
		EatType = bourbon,
		StaticModel = SportsDrinkFruitHand,
		WorldStaticModel = SportsDrinkFruit,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PISportsDrinkFruitBottle,
            	capacity        = 0.35,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PISportsDrinkFruit:1.0,
            		}
        	}
	}
	item PISportsDrinkLemonade
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
			Icon = PISportsDrinkLemonadeEmpty,
			IconFluidMask = PISportsDrink_Mask,
		EatType = bourbon,
		StaticModel = SportsDrinkLemonadeHand,
		WorldStaticModel = SportsDrinkLemonade,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PISportsDrinkLemonadeBottle,
            	capacity        = 0.35,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PISportsDrinkLemonade:1.0,
            		}
        	}
	}
	item PISportsDrinkLime
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
			Icon = PISportsDrinkLimeEmpty,
			IconFluidMask = PISportsDrink_Mask,
		EatType = bourbon,
		StaticModel = SportsDrinkLimeHand,
		WorldStaticModel = SportsDrinkLime,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PISportsDrinkLimeBottle,
            	capacity        = 0.35,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PISportsDrinkLime:1.0,
            		}
        	}
	}
	item PISportsDrinkOrange
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
			Icon = PISportsDrinkOrangeEmpty,
			IconFluidMask = PISportsDrink_Mask,
		EatType = bourbon,
		StaticModel = SportsDrinkOrangeHand,
		WorldStaticModel = SportsDrinkOrange,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PISportsDrinkOrangeBottle,
            	capacity        = 0.35,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PISportsDrinkOrange:1.0,
            		}
        	}
	}
	item PIFruitBarrel
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.1,
			Icon = PIFruitBarrelCool,
			IconFluidMask = PIFruitBarrel_Mask,
		EatType = bourbon,
		StaticModel = PIFruitBarrelWaterHand,
		WorldStaticModel = PIFruitBarrelWater,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PIFruitBarrel,
			PickRandomFluid	= true,
			capacity        = 0.23,
			CustomDrinkSound = DrinkingFromBottlePlastic,
            		Fluids
            		{
                		fluid           = JuiceGrape:1.0,
                		fluid           = JuiceFruitpunch:1.0,
		                fluid           = PIBlueRaspberry:1.0,
                		fluid           = PIKiwiStrawberry:1.0,
            		}
       		}
	}
    item PIFruitBarrelBox
    {
        Weight	=	9,
        Type	=	Food,
        DisplayName	=	Box of Fruit Barrels,
        Icon	=	PIBarrelBox,
        Packaged = TRUE,
        AlwaysWelcomeGift	=	true,
        Carbohydrates = 40,
        Proteins = 0,
        Lipids = 0,
        Calories = 200,
		StaticModel = PIBarrelBox,
        WorldStaticModel = PIBarrelBox,
        CantBeFrozen = TRUE,
    }
	item PIBottledUnsweetTea
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
			Icon = PITeaUnsweetEmpty,
			IconFluidMask = PITea_Mask,
		EatType = bottle,
		StaticModel = PIBottledTeaUnsweetHand,
		WorldStaticModel = PIBottledUnsweetTea,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PIBottledUnsweetTea,
            	capacity        = 0.55,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PIUnsweetTea:1.0,
            		}
        	}
	}
	item PIBottledTeaSweet
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
			Icon = PITeaSweetEmpty,
			IconFluidMask = PITea_Mask,
		EatType = bottle,
		StaticModel = PIBottledTeaSweetHand,
		WorldStaticModel = PIBottledTeaSweet,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PIBottledTeaSweet,
            	capacity        = 0.55,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PISweetTea:1.0,
            		}
        	}
	}
	item PIBottledTeaLemon
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
			Icon = PITeaLemonEmpty,
			IconFluidMask = PITea_Mask,
		EatType = bottle,
		StaticModel = PIBottledTeaLemonHand,
		WorldStaticModel = PIBottledTeaLemon,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PIBottledTeaLemon,
            	capacity        = 0.55,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PILemonTea:1.0,
            		}
        	}
	}
	item PIBottledTeaRaspberry
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
			Icon = PITeaRaspberryEmpty,
			IconFluidMask = PITea_Mask,
		EatType = bottle,
		StaticModel = PIBottledTeaRaspberryHand,
		WorldStaticModel = PIBottledTeaRaspberry,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PIBottledTeaRaspberry,
            	capacity        = 0.55,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PIRaspberryTea:1.0,
            		}
        	}
	}
	item PIBottledTeaExtraSweet
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
			Icon = PITeaExtraSweetEmpty,
			IconFluidMask = PITea_Mask,
		EatType = bottle,
		StaticModel = PIBottledTeaExtraSweetHand,
		WorldStaticModel = PIBottledTeaExtraSweet,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PIBottledTeaExtraSweet,
            	capacity        = 0.55,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PIExtraSweetTea:1.0,
            		}
        	}
	}
	item PIBottledTeaPeach
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
			Icon = PITeaPeachEmpty,
			IconFluidMask = PITea_Mask,
		EatType = bottle,
		StaticModel = PIBottledTeaPeachHand,
		WorldStaticModel = PIBottledTeaPeach,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PIBottledTeaPeach,
            	capacity        = 0.55,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PIPeachTea:1.0,
            		}
        	}
	}
	item PIBottledTeaGreenTea
	{
		DisplayName = Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.3,
			Icon = PITeaPeachEmpty,
			IconFluidMask = PITea_Mask,
		EatType = bottle,
		StaticModel = PIBottledTeaGreenTeaHand,
		WorldStaticModel = PIBottledTeaGreenTea,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PIBottledTeaGreenTea,
            	capacity        = 0.55,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PIGreenTea:1.0,
            		}
        	}
	}
	item PISparklingWater
	{
		DisplayName = Sparkling Water,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.2,
		Icon = PISparklingWater,
		EatType = popcan,
		StaticModel = PISparklingWaterHand,
		WorldStaticModel = PISparklingWater,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = PISparklingCan,
		Opened	= false,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = CarbonatedWater:1.0,
            		}
        	}
	}
	item PIFizzyFazOrange
	{
		DisplayName = Fizzy Faz,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.2,
		Icon = PIFizzyFazOrange,
		EatType = popcan,
		StaticModel = PIFizzyFazOrangeHand,
		WorldStaticModel = PIFizzyFazOrange,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = PIFizzyFazOrangeCan,
		Opened	= false,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = PIFizzyFazOrange:1.0,
            		}
        	}
	}
	item PIFizzyFazPinkLemonade
	{
		DisplayName = Fizzy Faz,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.2,
		Icon = PIFizzyFazPinkLemonade,
		EatType = popcan,
		StaticModel = PIFizzyFazPinkLemonadeHand,
		WorldStaticModel = PIFizzyFazPinkLemonade,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = PIFizzyFazPinkLemonadeCan,
		Opened	= false,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = PIFizzyFazPinkLemonade:1.0,
            		}
        	}
	}
	item PIFizzyFazSourLime
	{
		DisplayName = Fizzy Faz,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.2,
		Icon = PIFizzyFazSourLime,
		EatType = popcan,
		StaticModel = PIFizzyFazSourLimeHand,
		WorldStaticModel = PIFizzyFazSourLime,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = PIFizzyFazSourLimeCan,
		Opened	= false,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = PIFizzyFazSourLime:1.0,
            		}
        	}
	}
	item PIFizzyFazGrape
	{
		DisplayName = Fizzy Faz,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.2,
		Icon = PIFizzyFazGrape,
		EatType = popcan,
		StaticModel = PIFizzyFazGrapeHand,
		WorldStaticModel = PIFizzyFazGrape,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = PIFizzyFazGrapeCan,
		Opened	= false,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = PIFizzyFazGrape:1.0,
            		}
        	}
	}
	item PIWillysWonderlandPunch
	{
		DisplayName = Punch,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.2,
		Icon = PIWillysWonderlandPunch,
		EatType = popcan,
		StaticModel = PIWillysWonderlandPunchHand,
		WorldStaticModel = PIWillysWonderlandPunch,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tooltip	= Tooltip_PIWillysWonderlandPunch,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = PIPunchCan,
		Opened	= false,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = PIWWPunch:1.0,
            		}
        	}
	}
	item PIDrDoctor
	{
		DisplayName = Dr. Doctor Ph.D.,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.2,
		Icon = PIDrDoctor,
		EatType = popcan,
		StaticModel = PIDrDoctorHand,
		WorldStaticModel = PIDrDoctor,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = PIDrDoctorCan,
		Opened	= false,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = PIDrDoctor:1.0,
            		}
        	}
	}
	item PIVeggieDrank
	{
		DisplayName = Vegetable Juice,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.2,
		Icon = PIVeggieDrank,
		EatType = popcan,
		StaticModel = PIVeggieDrankHand,
		WorldStaticModel = PIVeggieDrank,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = PIVeggieDrankCan,
		Opened	= false,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = PIVeggieDrank:1.0,
            		}
        	}
	}
	item PIDiamondCola
	{
		DisplayName = Diamond Cola,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.2,
		Icon = PIDiamondCola,
		EatType = popcan,
		StaticModel = PIDiamondColaHand,
		WorldStaticModel = PIDiamondCola,
		FillFromDispenserSound = GetWaterFromDispenserMetalMedium,
		FillFromLakeSound = GetWaterFromLakeSmall,
		FillFromTapSound = GetWaterFromTapMetalMedium,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = Cookable;HasMetal;SealedBeverageCan,

        	component FluidContainer
        	{
            	ContainerName   = PIDiamondColaCan,
		Opened	= false,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromCan,

            	Fluids
            		{
                	fluid           = PIDiamondCola:1.0,
            		}
        	}
	}
    /****************************** CoolCategory Alcohol ******************************/
	item WildPegasus
	{
		DisplayName = Glass Bottle,
		DisplayCategory = Food,
		EatType = bourbon,
		Type = Food,
		Weight = 0.5,
			Icon = WildPegasusNew,
			IconFluidMask = PegasusEmpty,
		StaticModel = PegasusHand,
		WorldStaticModel = WildPegasus_Ground,
		FillFromDispenserSound = GetWaterFromDispenserGlass,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapGlass,
		FillFromToiletSound = GetWaterFromToilet,
        CantBeFrozen = TRUE,
		Tags = Glass;GlassBottle,

        	component FluidContainer
        	{
            	ContainerName   = PIWildPegasusBottle,
            	capacity        = 1.6,
		CustomDrinkSound = DrinkingFromBottleGlass,

            	Fluids
            		{
                	fluid           = PIWildPegasus:1.0,
            		}
        	}
	}
	item SbeveGin
	{
		DisplayName = Glass Bottle,
		DisplayCategory = Food,
		EatType = bourbon,
		Type = Food,
		Weight = 0.2,
			Icon = Sbeve,
			IconFluidMask = Sbeve_Mask,
		StaticModel = SbeveHand,
		WorldStaticModel = Sbeve,
		FillFromDispenserSound = GetWaterFromDispenserGlass,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapGlass,
		FillFromToiletSound = GetWaterFromToilet,
        CantBeFrozen = TRUE,
		Tags = Glass;GlassBottle,

        	component FluidContainer
        	{
            	ContainerName   = PISbeveGin,
            	capacity        = 0.7,
		CustomDrinkSound = DrinkingFromBottleGlass,

            	Fluids
            		{
                	fluid           = PIGin:1.0,
            		}
        	}
	}
	item VodkaAus
	{
		DisplayName = Glass Bottle,
		DisplayCategory = Food,
		EatType = bourbon,
		Type = Food,
		Weight = 0.4,
			Icon = VodkaAus,
			IconFluidMask = VodkaAus_Mask,
		StaticModel = VodkaAusHand,
		WorldStaticModel = VodkaAus,
		FillFromDispenserSound = GetWaterFromDispenserGlass,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapGlass,
		FillFromToiletSound = GetWaterFromToilet,
        CantBeFrozen = TRUE,
		Tags = Glass;GlassBottle,

        	component FluidContainer
        	{
            	ContainerName   = VodkaAusBottle,
            	capacity        = 1.0,
		CustomDrinkSound = DrinkingFromBottleGlass,

            	Fluids
            		{
                	fluid           = PIVodka:1.0,
            		}
        	}
	}
	item PIBunnBourbon
	{
		DisplayName = Glass Bottle,
		DisplayCategory = Food,
		EatType = bourbon,
		Type = Food,
		Weight = 0.18,
			Icon = PIBunnBourbonEmpty,
			IconFluidMask = PIBunnBourbon_Mask,
		StaticModel = PIBunnBourbonHand,
		WorldStaticModel = PIBunnBourbon,
		FillFromDispenserSound = GetWaterFromDispenserGlass,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapGlass,
		FillFromToiletSound = GetWaterFromToilet,
        CantBeFrozen = TRUE,
		Tags = Glass;GlassBottle,

        	component FluidContainer
        	{
            	ContainerName   = PIBunnBottle,
            	capacity        = 0.8,
		CustomDrinkSound = DrinkingFromBottleGlass,

            	Fluids
            		{
                	fluid           = PIBunnBourbon:1.0,
            		}
        	}
	}
	item PIRyeWhiskey
	{
		DisplayName = Glass Bottle,
		DisplayCategory = Food,
		EatType = bourbon,
		Type = Food,
		Weight = 0.5,
			Icon = PIRyeWhiskeyEmpty,
			IconFluidMask = PIRyeWhiskey_Mask,
		StaticModel = PIRyeWhiskeyHand,
		WorldStaticModel = PIRyeWhiskey,
		FillFromDispenserSound = GetWaterFromDispenserGlass,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapGlass,
		FillFromToiletSound = GetWaterFromToilet,
        CantBeFrozen = TRUE,
		Tags = Glass;GlassBottle,

        	component FluidContainer
        	{
            	ContainerName   = PIRyeWhiskeyBottle,
            	capacity        = 1.6,
		CustomDrinkSound = DrinkingFromBottleGlass,

            	Fluids
            		{
                	fluid           = PIRyeWhiskey:1.0,
            		}
        	}
	}
	item PIAlcopop
	{
		DisplayName = Beer Bottle,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.4,
			Icon = PIAlcopopEmpty,
			IconFluidMask = PIAlcopop_Mask,
		EatType = Bourbon,
		StaticModel = PIAlcopopHand,
		WorldStaticModel = PIAlcopop,
		FillFromDispenserSound = GetWaterFromDispenserGlass,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapGlass,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = Glass;GlassBottle,

        	component FluidContainer
        	{
            	ContainerName   = PIAlcopopBottle,
            	capacity        = 0.3,
		CustomDrinkSound = DrinkingFromBottleGlass,

            	Fluids
            		{
                	fluid           = PIAlcopop:1.0,
            		}
        	}

	}
	item PIFireball
	{
		DisplayName = Shooter,
		DisplayCategory = Food,
		Type = Normal,
		Weight = 0.05,
			Icon = PIFireballEmpty,
			IconFluidMask = PIFireball_Mask,
		EatType = bourbon,
		StaticModel = PIFireballHand,
		WorldStaticModel = PIFireball,
		FillFromDispenserSound = GetWaterFromDispenserPlastic,
		FillFromLakeSound = GetWaterFromLakeBottle,
		FillFromTapSound = GetWaterFromTapPlasticBig,
		FillFromToiletSound = GetWaterFromToilet,
		Tags = CookableMicrowave,

        	component FluidContainer
        	{
            	ContainerName   = PIFireball,
            	capacity        = 0.05,
		CustomDrinkSound = DrinkingFromBottlePlastic,

            	Fluids
            		{
                	fluid           = PICinnamonWhiskey:1.0,
            		}
        	}
	}
}